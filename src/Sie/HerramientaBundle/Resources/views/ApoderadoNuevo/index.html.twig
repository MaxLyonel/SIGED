<style>
	[v-cloak]{
		display: none;
	}
	.jupper{
		text-transform: uppercase;
	}
	.nombre-apoderado{
		/*background: #40B2CB;*/
		color: #40B2CB;
		font-weight: bold;
		font-size: 1.3em;
		padding: 5px;
		padding-left: 0px;
	}
	.no-registrado{
		/*padding: 5px;*/
		font-style: italic;
		color: #CCCCCC;
	}
	.opciones{
		font-style: italic !important;
		color: #CCCCCC;
	}
	.datos{
		background: #FFFFFF;
		border-left: 2px #EEEEEE solid;
		padding: 10px;
		padding-top: 0px;
		position: absolute;
		width: 400px;
		height: 500px;
		top: 0px;
		right: 0px;
		height: 100%;
	}
	.datos > h3{
		color: #40B1CB;
		/*color: #FFFFFF;*/
		margin-bottom: 10px;
		padding-bottom: 7px;
		border-bottom: 1px solid #EEEEEE;
		font-weight: bold;
		font-size: 1.4em;
	}
	.datos label{
		color:#9B9B9B;
	}
	.datos p{
		font-weight: bold;
		font-size: 1.2em;
		/*color: #40B2CB;*/
		/*color: #2A7180;*/
	}
	h5{
		padding-top: 15px;
		/*color:#40B2CB;*/
		font-weight: bold;
	}
	.msg-segip-validado{
		padding: 7px;
		/*background: #8CC152;*/
		color:#8CC152;
		font-weight: bold;
		width: 100%;
		text-align: center;
		font-size: 1.1em;
	}
	.requerido{
		color:#FF5656;
	}
	.validando{
		/*text-align: center;*/
		/*padding: 5px;*/
		/*font-size: 1.1em;*/
		/*background: #4dcde6;*/
		/*color: #FFFFFF;*/
	}
</style>
<div class="modal-dialog modal-lg">
	<div class="modal-content" style="height: 90%;">
		<div id="app">
		<div v-cloak>
			<div class="modal-header bg-primary">
				<button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
				<h4 class="modal-title">Apoderados</h4>
			</div>
			<div class="modal-body">
				<h5 style="padding-top: 0px !important;">Datos del estudiante</h5>
				<div class="row">
					<div class="col-md-12">
						<table class="table table-bordered table-condensed">
							<tbody>
								<tr><th width="120px">Código RUDE</th><td>{{inscripcion.estudiante.codigoRude}}</td></tr>
								<tr><th>Estudiante</th><td>{{inscripcion.estudiante.paterno}} {{inscripcion.estudiante.materno}} {{inscripcion.estudiante.nombre}}</td></tr>
								<tr><th>Nivel</th><td>{{inscripcion.institucioneducativaCurso.nivelTipo.nivel}}</td></tr>
								<tr><th>Grado</th><td>{{inscripcion.institucioneducativaCurso.gradoTipo.grado}}</td></tr>
								<tr><th>Paralelo</th><td>{{inscripcion.institucioneducativaCurso.paraleloTipo.paralelo}}</td></tr>
							</tbody>
						</table>
					</div>
				</div>
				<div v-show="!formulario">
					<h5>Apoderados registrados en la gestión 2019</h5>
					<div v-if="apoderados2019.length > 0">
						<table class="table">
							<tbody>
								<tr v-for="(apoderado, key) in apoderados2019" :key="key">
									<td>
										<span v-if="key == 0">Padre</span>
										<span v-if="key == 1">Madre</span>
										<span v-if="key == 2">Tutor <span v-if="apoderado != ''"> <br> ${apoderado.apoderado}</span> </span>
									</td>
									<td>
										<div v-if="apoderado != ''">
											<div class="nombre-apoderado">
												${apoderado.paterno} ${apoderado.materno} ${apoderado.nombre}
											</div>
											<div class="opciones">
												<a type="button" @click="verApoderadoDatos(apoderado)" class="text-primary">Ver datos</a>
												{# <a type="button" @click="eliminar(apoderado.id)" class="text-danger">Eliminar</a> #}
											</div>
										</div>
										<div v-else class="no-registrado">
											<div class="no-registrado">No registrado</div>
											<div class="opciones">
												{# <a type="button" @click="abrirFormulario()">Registrar</a>  #}
											</div>
										</div>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
					<div v-else class="opciones">No tiene apoderados registrados</div>
					<h5>Apoderados registrados en la gestión 2020</h5>
					<div v-if="apoderados2020.length > 0">
						<table class="table bordered">
							<tbody>
								<tr v-for="(apoderado, key) in apoderados2020" :key="key">
									<td width="120px">
										<span v-if="key == 0">Padre</span>
										<span v-if="key == 1">Madre</span>
										<span v-if="key == 2">Tutor <span v-if="apoderado != ''"> <br> ${apoderado.apoderado}</span> </span>
									</td>
									<td>
										<div v-if="apoderado != ''">
											<div class="nombre-apoderado">
												${apoderado.paterno} ${apoderado.materno} ${apoderado.nombre}
											</div>
											<div class="opciones">
												<a type="button" @click="verApoderadoDatos(apoderado)" class="text-primary">Ver datos</a>
												{# <a type="button" @click="eliminar(apoderado.id)" class="text-danger">Eliminar</a> #}
											</div>
										</div>
										<div v-else class="no-registrado">
											<div class="no-registrado">No registrado</div>
											<div class="opciones">
												<a type="button" @click="abrirFormulario(key + 1)" class="text-info">Registrar</a> 
											</div>
										</div>
									</td>
								</tr>
							</tbody>
						</table>
					</div>
					<div v-else>No tiene apoderados registrados</div>
					{# <button v-if="apoderados2020.length < 3" type="button" @click="abrirFormulario()">Registrar apoderado</button> #}
				</div>
				<div v-show="formulario">
					<h5>Registrar datos del apoderado <span class="requerido"> ( * campos requeridos )</span></h5>
					<fieldset :disabled="validado">
						<div class="row">
							<div class="form-group col-md-6">
								<label>Carnet <span class="requerido">*</span> </label>
								<input v-model="apoderado.carnet" type="text" class="form-control jupper numeros" maxlength="11" v-on:keypress="numerico">
							</div>
							<div class="form-group col-md-3">
								<label>Complemento</label>
								<input v-model="apoderado.complemento" type="text" class="form-control jupper" maxlength="2">
							</div>
							<div class="form-group col-md-3">
								<label>Expedido <span class="requerido">*</span></label>
								<select v-model="apoderado.expedido" class="form-control jupper">
									<option v-for="(expedido, key) in expedidos" :key="key" :value="expedido.id" v-text="expedido.sigla"></option>
								</select>
							</div>
							<div class="form-group col-md-4">
								<label>Paterno <span class="requerido">*</span></label>
								<input v-model="apoderado.paterno" type="text" class="form-control jupper" maxlength="50" v-on:keypress="alfabetico">
							</div>
							<div class="form-group col-md-4">
								<label>Materno <span class="requerido">*</span></label>
								<input v-model="apoderado.materno" type="text" class="form-control jupper" maxlength="50" v-on:keypress="alfabetico">
							</div>
							<div class="form-group col-md-4">
								<label>Nombres <span class="requerido">*</span></label>
								<input v-model="apoderado.nombres" type="text" class="form-control jupper" maxlength="50" v-on:keypress="alfabetico">
							</div>
							<div class="form-group col-md-6">
								<label>Fecha nacimiento <span class="opciones">( dd-mm-aaaa ) </span> <span class="requerido"> * </span></label>
								<input v-model="apoderado.fechaNacimiento" type="text" class="form-control jupper" maxlength="11">
							</div>
							<div class="form-group col-md-6">
								<label></label>
								<div v-if="validando" class="validando">
									<button type="button" class="btn btn-info btn-block"><i class="fa fa-refresh fa-spin"></i> Validando</button>
								</div>
								<div v-else>
									<button v-if="!validado" type="button" @click="validar()" class="btn btn-info btn-block">Validar datos con el SEGIP</button>
									<div v-else class="msg-segip-validado"> <i class="fa fa-check"></i> Datos validados correctamente</div>
								</div>
							</div>
						</div>
					</fieldset>
					
					<div v-if="validado">
						<div class="row">
							<div class="form-group col-md-4">
								<label>Parentesco <span class="requerido">*</span></label>
								<select v-model="apoderado.parentesco" class="form-control jupper">
									<option v-for="(parentesco, key) in parentescos" :key="key" :value="parentesco.id" v-text="parentesco.apoderado"></option>
								</select>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-md-9">
								<label>Lugar de nacimiento</label>
								<input v-model="apoderado.lugar" type="text" class="form-control jupper" maxlength="100" v-on:keypress="alfanumerico">
							</div>
							<div class="form-group col-md-3">
								<label>Género <span class="requerido">*</span></label>
								<select v-model="apoderado.genero" class="form-control jupper">
									<option v-for="(genero, key) in generos" :key="key" :value="genero.id" v-text="genero.genero"></option>
								</select>
							</div>
							<div class="form-group col-md-4">
								<label>Correo</label>
								<input v-model="apoderado.correo" type="text" class="form-control" maxlength="50" v-on:keypress="alfanumerico">
							</div>
							<div class="form-group col-md-4">
								<label>Celular <span class="requerido">*</span></label>
								<input v-model="apoderado.celular" type="text" class="form-control jupper" maxlength="10" v-on:keypress="numerico">
							</div>
							<div class="form-group col-md-4">
								<label>Teléfono</label>
								<input v-model="apoderado.telefono" type="text" class="form-control jupper" maxlength="10" v-on:keypress="numerico">
							</div>
							<div class="form-group col-md-6">
								<label>Ocupación laboral actual <span class="requerido">*</span></label>
								<select v-model="apoderado.ocupacion" class="form-control jupper">
									<option v-for="(ocupacion, key) in ocupaciones" :key="key" :value="ocupacion.id" v-text="ocupacion.ocupacion"></option>
								</select>
							</div>
							<div class="form-group col-md-6">
								<div v-if="apoderado.ocupacion == 10035">
									<label>Especificar <span class="requerido">*</span></label>
									<input v-model="apoderado.ocupacionOtro" type="text" class="form-control jupper" maxlength="50" v-on:keypress="alfanumerico">
								</div>
							</div>
						</div>
						<div class="row">
							<div class="form-group col-md-6">
								<label>Mayor grado de instrucción alcanzado <span class="requerido">*</span></label>
								<select v-model="apoderado.instruccion" class="form-control jupper">
									<option v-for="(instruccion, key) in instrucciones" :key="key" :value="instruccion.id" v-text="instruccion.instruccion"></option>
								</select>
							</div>
							<div class="form-group col-md-6">
								<label>Extranjero <span class="requerido">*</span></label>
								<select v-model="apoderado.extranjero" class="form-control jupper">
									<option v-for="(extranjero, key) in extranjeros" :key="key" :value="extranjero.id" v-text="extranjero.extranjero"></option>
								</select>
							</div>
						</div>
					</div>

					<div class="modal-footer">
						<button type="button" class="btn btn-default" @click="cerrarFormulario()">Cancelar</button>
						<button v-if="validado" type="button" class="btn btn-primary" @click="registrar()">Registrar apoderado</button>
					</div>

				</div>
				<div v-if="verdatos && apoderadoDatos != ''" class="datos">
					<h3 style="padding-top: 0px;">
						${apoderadoDatos.paterno} ${apoderadoDatos.materno} ${apoderadoDatos.nombre}
						<span style="float:right"> <i class="fa fa-close" @click="verdatos = false"></i> </span>
					</h3>
					<div class="row">
						<div class="col-md-6">
							<label>Carnet</label>
							<p>${apoderadoDatos.carnet}</p>
						</div>
						<div class="col-md-3">
							<label>Complemento</label>
							<p>${apoderadoDatos.complemento}</p>
						</div>
						<div class="col-md-3">
							<label>Expedido</label>
							<p>${apoderadoDatos.expedido}</p>
						</div>
						{# <div class="col-md-4">
							<label>Paterno</label>
							<p>${apoderadoDatos.paterno}</p>
						</div>
						<div class="col-md-4">
							<label>Materno</label>
							<p>${apoderadoDatos.materno}</p>
						</div>
						<div class="col-md-4">
							<label>Nombre(s)</label>
							<p>${apoderadoDatos.nombre}</p>
						</div> #}
						<div class="col-md-6">
							<label>Fecha de nacimiento</label>
							<p>${apoderadoDatos.fechaNacimiento}</p>
						</div>
						<div class="col-md-6">
							<label>Género</label>
							<p>${apoderadoDatos.genero}</p>
						</div>
						<div class="col-md-12">
							<label>Lugar de nacimiento</label>
							<p>${apoderadoDatos.lugar}</p>
						</div>
						<div class="col-md-4">
							<label>Correo</label>
							<p>${apoderadoDatos.correo}</p>
						</div>
						<div class="col-md-4">
							<label>Teléfono</label>
							<p>${apoderadoDatos.telefono}</p>
						</div>
						<div class="col-md-4">
							<label>Celular</label>
							<p>${apoderadoDatos.celular}</p>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<label>Ocupación laboral actual</label>
							<p>${apoderadoDatos.ocupacion}</p>
						</div>
						<div class="col-md-6">
							<label></label>
							<p>${apoderadoDatos.ocupacionOtro}</p>
						</div>
					</div>
					<div class="row">
						<div class="col-md-6">
							<label>Mayor grado de instrucción alcanzado</label>
							<p>${apoderadoDatos.instruccion}</p>
						</div>
						<div class="col-md-6">
							<label>Extranjero</label>
							<p v-if="apoderadoDatos.extranjero">SI</p>
							<p v-else>NO</p>
						</div>
					</div>
					<div class="row">
						<div class="col-md-12 text-right" style="border-top: 1px solid #EEEEEE;">
							<a type="button" @click="eliminar(apoderadoDatos.id)" class="text-danger">Eliminar</a>
						</div>
					</div>
				</div>
			</div>
		</div>
		</div>
	</div>
</div>

<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.15.2/axios.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@8"></script>

<script>
	
	$('.numeros').on('keypress',function(e){
        console.log('carnet');
        var key = e || window.event;
        var k = key.charCode || key.keyCode;
        if ((k < 48 || k > 57) //NUmeros
            && (k != 13) //ENTER
            && (k != 8) //retroceso
            && (k != 9) //tab
        )
        return false;
    });

	var app = new Vue({
	    delimiters: ['${', '}'],
	    el: '#app',
	    data: {
	    	formulario: false,
	    	validado: false,
	    	validando: false,
	    	verdatos: false,
	    	idInscripcion: '{{idInscripcion}}',
	    	apoderados2019: '',
	    	apoderados2020: '',
	    	apoderado: {
	    		carnet: '',
	    		complemento: '',
	    		expedido: '',
	    		paterno: '',
	    		materno: '',
	    		nombres: '',
	    		fechaNacimiento: '',
	    		lugar: '',
	    		genero: '',
	    		correo: '',
	    		celular: '',
	    		telefono: '',
	    		ocupacion: '',
	    		ocupacionOtro: '',
	    		instruccion: '',
	    		parentesco: '',
	    		extranjero: 0
	    	},
	    	apoderadoDatos: '',
	    	apoderadoTipo: '',
	    	expedidos: [],
	    	generos: [],
	    	ocupaciones: [],
	    	instrucciones: [],
	    	parentescos: [],
	    	parentescoPadre: [],
	    	parentescoMadre: [],
	    	parentescoTutor: [],
	    	extranjeros: [],
	    },
	    mounted(){
	    	this.cargar();
	    },
	    methods: {
	    	numerico: function(event){
	    	    var k = event.charCode || event.keyCode;
	    	    if ((k < 48 || k > 57) //NUmeros
	    	        && (k != 13) //ENTER
	    	        && (k != 8) //retroceso
	    	        && (k != 9) //tab
	    	    ){
	    	        event.preventDefault();
	    	        return false;
	    	    }
	    	},
	    	alfabetico: function(event){
                var k = event.charCode || event.keyCode;
                if ((k < 97 || k > 122)//letras minusculas
                    && (k < 65 || k > 90) //letras mayusculas
                    && (k != 13) //ENTER
                    && (k != 8) //retroceso
                    && (k != 9) //tab
                    && (k != 241) //ñ
                     && (k != 209) //Ñ
                     && (k != 32) //espacio
                     && (k != 225) //á
                     && (k != 233) //é
                     && (k != 237) //í
                     && (k != 243) //ó
                     && (k != 250) //ú
                     && (k != 193) //Á
                     && (k != 201) //É
                     && (k != 205) //Í
                     && (k != 211) //Ó
                     && (k != 218) //Ú
                     && (k != 44) //coma ,
                     && (k != 46) //punto .
                ){
                	event.preventDefault();
                	return false;
                }
            },
	    	alfanumerico: function(event){
                var k = event.charCode || event.keyCode;
                if ((k < 97 || k > 122)//letras minusculas
                    && (k < 65 || k > 90) //letras mayusculas
                    && (k < 48 || k > 57) //NUmeros
                    && (k != 13) //ENTER
                    && (k != 8) //retroceso
                    && (k != 9) //tab
                    && (k != 241) //ñ
                     && (k != 209) //Ñ
                     && (k != 32) //espacio
                     && (k != 225) //á
                     && (k != 233) //é
                     && (k != 237) //í
                     && (k != 243) //ó
                     && (k != 250) //ú
                     && (k != 193) //Á
                     && (k != 201) //É
                     && (k != 205) //Í
                     && (k != 211) //Ó
                     && (k != 218) //Ú
                     && (k != 44) //coma ,
                     && (k != 46) //punto .
                ){
                	event.preventDefault();
                	return false;
                }
            },
	    	cargar(){
	    		axios.get(Routing.generate('apoderado_nuevo_apoderados', {idInscripcion: this.idInscripcion}))
	    			.then(response => {
	    				console.log(response.data);
	    				this.apoderados2019 = response.data.apoderados2019;
	    				this.apoderados2020 = response.data.apoderados2020;
	    				this.expedidos = response.data.expedidos;
	    				this.generos = response.data.generos;
	    				this.ocupaciones = response.data.ocupaciones;
	    				this.instrucciones = response.data.instrucciones;
	    				this.parentescoPadre = response.data.parentescoPadre;
	    				this.parentescoMadre = response.data.parentescoMadre;
	    				this.parentescoTutor = response.data.parentescoTutor;
	    				this.extranjeros = response.data.extranjeros;
	    			})
	    			.catch(e => {
	    				console.log(e);
	    			});
	    	},
	    	verApoderadoDatos(apoderado){
	    		this.apoderadoDatos = apoderado;
	    		this.verdatos = true;
	    	},
	    	abrirFormulario(tipo){
	    		this.apoderado.carnet = '';
	    		this.apoderado.complemento = '';
	    		this.apoderado.expedido = '';
	    		this.apoderado.paterno = '';
	    		this.apoderado.materno = '';
	    		this.apoderado.nombres = '';
	    		this.apoderado.fechaNacimiento = '';
	    		this.apoderado.lugar = '';
	    		this.apoderado.genero = '';
	    		this.apoderado.correo = '';
	    		this.apoderado.celular = '';
	    		this.apoderado.telefono = '';
	    		this.apoderado.ocupacion = '';
	    		this.apoderado.ocupacionOtro = '';
	    		this.apoderado.instruccion = '';
	    		this.apoderado.parentesco = '';
	    		this.apoderado.extranjero = 0;

	    		this.apoderadoTipo = tipo;
	    		if (tipo == 1) {
	    			this.parentescos = this.parentescoPadre;
	    			this.apoderado.parentesco = tipo;
	    		}else{
	    			if (tipo == 2) {
	    				this.parentescos = this.parentescoMadre;
	    				this.apoderado.parentesco = tipo;
	    			}else{
	    				this.parentescos = this.parentescoTutor;
	    			}
	    		}
	    		console.log(tipo);
	    		console.log(this.parentescos);

	    		this.formulario = true;
	    		this.validado = false;
	    		this.verdatos = false;
	    	},
	    	cerrarFormulario(){
	    		this.formulario = false;
	    		this.validado = false;
	    		this.verdatos = false;
	    	},
	    	validar(){
	    		if (this.apoderado.carnet != '' && this.apoderado.nombre != '' && this.apoderado.fechaNacimiento != '' && this.apoderado.expedido != '') {
		    		this.validando = true;
		    		axios.post(Routing.generate('apoderado_nuevo_validar', {apoderado: this.apoderado}))
		    			.then(response => {
		    				this.validando = false;
		    				if (response.data.status == 'success') {
		    					this.validado = true;
		    				}
		    				if (response.data.status == 'error') {
	    						Swal.fire(
	    					  		'Validación SEGIP!',
	    					  		response.data.msg,
	    					  		'warning'
	    						)
		    				}
		    			})
		    			.catch(e => {
		    				this.validando = false;
		    				console.log(e);
		    			});
		    	}else{
	    			Swal.fire(
	    		  		'Completar información',
	    		  		'Completa la información requerida',
	    		  		'warning'
	    			)
		    	}
	    	},
	    	registrar(){
	    		axios.post(Routing.generate('apoderado_nuevo_registrar', {apoderado: this.apoderado, idInscripcion: this.idInscripcion, validado: this.validado}))
	    			.then(response => {
	    				if (response.data.status == 'success') {
	    					this.cargar();
	    					this.validado = false;
	    					this.formulario = false;
	    					Swal.fire(
    					  		'Registro realizado!',
    					  		response.data.msg,
    					  		'success'
    						)
	    				}
	    				if (response.data.status == 'error') {
	    					Swal.fire(
    					  		'Aviso',
    					  		response.data.msg,
    					  		'warning'
    						)
	    				}
	    			})
	    			.catch(e => {
	    				console.log(e);
	    			});
	    	},
	    	eliminar(id){
	    		Swal.fire({
	    		  	title: 'Eliminar apoderado?',
	    		  	text: "Se eliminará el apoderado",
	    		  	icon: 'question',
	    		  	showCancelButton: true,
	    		  	confirmButtonColor: '#3085d6',
	    		  	cancelButtonColor: '#d33',
	    		  	confirmButtonText: 'Si, eliminar!'
	    		}).then((result) => {
	    		  	if (result.value) {
	    		  		axios.post(Routing.generate('apoderado_nuevo_eliminar', {idApoderado: id}))
	    		  			.then(response => {
	    		  				if (response.data.status == 'success') {
	    		  					this.cargar();
	    		  					this.validado = false;
	    		  					this.formulario = false;
	    		  					this.apoderadoDatos = '';
	    		  					this.verdatos = false;

    		  						Swal.fire(
    		  					  		'Eliminado!',
    		  					  		response.data.msg,
    		  					  		'success'
    		  						)
	    		  				}
	    		  				if (response.data.status == 'error') {
	    		  					Swal.fire(
    		  					  		'Eliminado!',
    		  					  		response.data.msg,
    		  					  		'error'
    		  						)
	    		  				}
	    		  			})
	    		  			.catch(e => {
	    		  				console.log(e);
	    		  			});
	    		  	}
	    		});
	    	}
	    }
	});
</script>