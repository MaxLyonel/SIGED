
{% if exist == true %}
    <small>
      <div class="row">
          <div class="col-md-12">
              {% for flashMessage in app.session.flashbag.get('noinscription') %}
                  <div class="alert alert-warning alert-dismissible" role="alert">
                      <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                      <strong><i class='fa fa-linux'></i></strong> {{ flashMessage }}
                  </div>
              {% endfor %}

          </div>
      </div>
      <div class="row">
          <div class="col-md-12">
              {% for flashMessage in app.session.flashbag.get('goodinscription') %}
                  <div class="alert alert-success alert-dismissible" role="alert">
                      <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                      <strong><i class='fa fa-linux'></i></strong> {{ flashMessage }}
                  </div>
              {% endfor %}

          </div>
      </div>
        <div class="row">
          <div class="col-md-4">
                <a class="btn btn-block btn-facebook" href="{{path('donwload_listStudentPerCourse', {'ue': sie, 'gestion': gestion, 'nivel':nivel,'grado':grado, 'paralelo':paralelo,'turno':turno } )}}">
                  <i class="fa fa-download"></i> Listado de Estudiantes del Curso
                </a>
          </div>
          <div class="col-md-4">

                <a class="btn btn-block btn-linkedin" href="{{path('donwload_boletinPromoPerUe', {'ue': sie, 'nivel':nivel,'grado':grado, 'paralelo':paralelo,'turno':turno, 'gestion': gestion, 'ciclo':ciclo, 'itemsUe':itemsUe } )}}">
                  <i class="fa fa-download"></i> Boletin Centralizador
                </a>
          </div>
          <div class="col-md-4">
            {% if app.session.get('ue_modular') or app.session.get('ue_regularizar') or app.session.get('ue_noturna') or app.session.get('ue_tecteg') or app.session.get('ue_general') %}
              <button type="button" class="btn btn-inverse btn-stroke" data-toggle="modal" data-target=".bs-example-modal-table" onclick="doInscriptionsRude('{{infoUe}}');" >
                  <i class="fa fa-user"></i> Inscrip. con Rude
              </button>
            {% endif %}

          </div>
          <!--div class="col-md-3" >
            {% if app.session.get('ue_modular') and nivel >= 13 %}
            {% else %}
            <button type="button" class="btn btn-danger btn-stroke" data-toggle="modal" data-target=".bs-example-modal-table" onclick="doInscriptionsWithOutRude('{{infoUe}}');" >
              <i class="fa fa-user-plus"></i> Inscrip. sin Rude
            </button>
            {% endif %}
          </div-->
      </div>
    <br />
        <div class="row">
            <div class="col-lg-12">
                <div id="no-more-tables">
                    <div class="row">

                    </div>

                    <table class="table table-bordered table-hover cf">
                        <tr>

                        <input type="hidden" id="formdata_data" name="formdata[data]" value="{{aData}}">
                        <td align="center" class="warning" colspan="4">Estudiantes Inscritos</br>
                            {{gradoname}} - {{paraleloname}}
                        </td>
                        <td>Opciones</td>
                        <!--td>
                            <input type="checkbox" id="checkAll" name="selectAll" onclick="selectAllEle();"   >
                        </td-->
                        </tr>
                        {#init the array info student #}
                        {% set objInfoStudent = [] %}
                        {% for data in objStudents %}
                          {# set items = {
                                          'estadomatriculaId': data.estadomatriculaId,
                                          'id': data.id,
                                          'carnetIdentidad': data.carnetIdentidad,
                                          'codigoRude': data.codigoRude,
                                          'paterno': '',
                                          'materno': '',
                                          'nombre': '',
                                          'fechaNacimiento': data.fechaNacimiento,
                                          'eInsId': data.eInsId,
                                          'nivelId': data.nivelId,
                                          'cicloId': data.cicloId,
                                          'gradoId': data.gradoId,
                                          'nivel': data.nivel,
                                          'grado': data.grado,
                                          'paralelo': data.paralelo
                                          } #}
                          {% set items = {
                                          'estadomatriculaId': data.estadomatriculaId,
                                          'id': data.id,
                                          'carnetIdentidad': data.carnetIdentidad,
                                          'codigoRude': data.codigoRude,
                                          'paterno': '',
                                          'materno': '',
                                          'nombre': '',
                                          'fechaNacimiento': data.fechaNacimiento,
                                          'eInsId': data.eInsId,
                                          'nivel': data.nivel,
                                          'grado': data.grado,
                                          'paralelo': data.paralelo
                                          } %}
                            {% set jsnInfoStudent = items|json_encode() %}
                            {# set the array student info and convert on json string #}
                            {# set objInfoStudent = objInfoStudent|merge(data) #}
                            {# set jsnInfoStudent = objInfoStudent|json_encode() #}
                            <tr >
                                <td>{{loop.index}}</td>
                                <td  align="">{{data.codigoRude}}</td>
                                <td  align="">{{data.paterno}} {{data.materno}} {{data.nombre}} </td>
                                <td  align="">
                                  {% if data.estadomatriculaId ==4 %}
                                  <button type="button" class="btn btn-success btn-stroke btn-xs" data-toggle="modal" data-target=".bs-example-modal-table" onclick="changeMatricula('{{infoUe}}','{{jsnInfoStudent}}');">
                                  {% else %}
                                   <button type="button" class="btn btn-default btn-stroke btn-xs" data-toggle="modal" data-target=".bs-example-modal-table" onclick="changeMatricula('{{infoUe}}','{{jsnInfoStudent}}');">
                                  {% endif %}
                                     {{data.estadomatricula}}
                                   </button>

                                </td>
                                <td  align="">
                                    <div class="btn-group tooltips" data-toggle="tooltip" data-container="body" title="" data-original-title="Calificaciones">
                                        <button type="button" class="btn btn-circle btn-danger " data-toggle="modal" data-target=".bs-example-modal-table" onclick="getNotas('{{infoUe}}','{{jsnInfoStudent}}');" >
                                            <i class="fa fa-list"></i>
                                        </button>
                                    </div>
                                    
                                    <div class="btn-group tooltips" data-toggle="tooltip" data-container="body" title="" data-original-title="Imprimir">
                                      {% if  1 == 2 %}
                                      <a class="btn btn-circle btn-lilac" href="{{path('download_libreta_tecnica', {'idInscripcion': data.eInsId, 'rude': data.codigoRude, 'sie':sie, 'gestion': gestion, 'nivel':nivel,'grado':grado, 'paralelo':paralelo,'turno':turno, 'ciclo':ciclo} )}}">
                                        <i class="fa fa-archive"></i>
                                      </a>
                                      {% endif %}
                                    </div>
                                    {% if grado == '6'  %}
                                    <div class="btn-group tooltips" data-toggle="tooltip" data-container="body" title="" data-original-title="Imprimir">
                                        <button type="button" class="btn btn-circle btn-primary " data-toggle="modal" data-target=".bs-example-modal-table" onclick="registerEspecialidad('{{infoUe}}','{{jsnInfoStudent}}');" >
                                            <i class="fa fa-user"></i>
                                        </button>
                                    </div>
                                    {% endif %}
                                   </td>
                                  </td>
                                </td>

                            </tr>
                        {%endfor%}

                    </table>

                </div>
                <!-- /.portlet -->
            </div>
        </div>
    </small>
    <!-- /.row -->
{% else %}

    <div class="row">
        <div class="col-md-12">
            {% for flashMessage in app.session.flashbag.get('warninsueall') %}
                <div class="alert alert-warning alert-dismissible" role="alert">
                    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <strong><i class='fa fa-linux'></i></strong> {{ flashMessage }}
                </div>
            {% endfor %}

        </div>
    </div>
{% endif %}

<script>
    var getNotas = function (infoUe, infoStudent) {
        $.ajax({
            type: 'post',
            data: ({infoUe: infoUe, infoStudent: infoStudent}),
            url: "{{ path('herramienta_infoEstudianteNotas_index') }}",
            beforeSend: function () {
                $('#modal').empty();
            },
            success: function (data) {
                $('#modal').empty();
                $('#modal').append(data);
            },
            statusCode: {
                500: function () {

                },
                404: function () {

                }
            }
        });
    };

    var registerEspecialidad = function (infoUe, infoStudent) {
        $.ajax({
            type: 'post',
            data: ({infoUe: infoUe, infoStudent: infoStudent}),
            url: "{{ path('herramienta_info_register_speciality_index') }}",
            beforeSend: function () {
                $('#modal').empty();
            },
            success: function (data) {
                $('#modal').empty();
                $('#modal').append(data);
            },
            statusCode: {
                500: function () {

                },
                404: function () {

                }
            }
        });
    };
    var saveSpeciality = function (infoUe, infoStudent) {
        var  specialityForm = $('#specialityFormId').serialize();
        var specialityId = $('#form_especialidad').val();
        var horas = $('#form_horas').val();
        var eInsId = $('#form_eInsId').val();

           $('#modal').modal('hide');
             $.ajax({
                 type: 'post',
                 url: Routing.generate('herramienta_info_register_speciality_save'),
                 data: ({specialityId: specialityId, horas: horas, eInsId: eInsId}),
                 beforeSend: function () {
                   $('#modal').empty();
                 },
                 success: function (data) {
                   $('#modal').empty();
                   //$('#modal').append(data);
                   //location.reload(true);
                 },
                 statusCode: {
                     500: function () {

                     },
                     404: function () {

                     }
                 }
             });
         }


    var onlyNumber = function (event) {

        var key = window.event ? event.keyCode : event.which;

        if (key > 31 && (key < 48 || key > 57) && key != 47) {
            $('#noNumber').text(" Campo permitido solo para números ");
            $("#form_registrar").attr("disabled", true);
            return false;
        }
        else {
            $('#noNumber').text(" ");
            $("#form_registrar").removeAttr("disabled");
            return true;
        }
    }
    ;


    var changeMatricula = function (infoUe, infoStudent) {

        $.ajax({
            type: 'post',
            data: ({infoUe: infoUe, infoStudent: infoStudent}),
            url: Routing.generate('herramienta_changeMatricula_index'),
            beforeSend: function () {
                $('#modal').empty();
            },
            success: function (data) {
                $('#modal').empty();
                $('#modal').append(data);
            },
            statusCode: {
                500: function () {

                },
                404: function () {

                }
            }
        });
    };


</script>
