<style>
  label{
    font-weight: bold
  }

  .higherWider {
    width:1000px;
    margin-top:100px;
  }


form {
    width: 90%;
    margin: 0 auto;
}

.box {
    padding: 0.7rem;
}
.box {
    float: left;
    width: 33%;
}
input {
    display: inline-block;
    width: 33%;
    padding: 0.4rem;
}

</style>
<div class="modal-dialog modal-lg higherWider" >
  <div class="modal-content">
    <div id="app">
    
        <div class="row">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-md-12">


                        <div class="panel panel-default">
                            <div class="panel-body">
                                <div class="alert " style="padding:10px">
                                    <h5 class="text-lilac">Datos del Curso</h5>
                                        <table class="table table-condensed table-bordered" style="background:#EEEEEE">
                                            <tbody><tr>
                                                    <th>Nivel</th><td>${DBStudent.nivel}</td>
                                                    <th>Turno</th><td>${DBStudent.turno}</td>
                                                </tr>
                                                <tr>
                                                    <th>Grado</th><td>${DBStudent.grado}</td>
                                                    <th>Paralelo</th><td>${DBStudent.paralelo}</td>
                                                </tr>
                                            </tbody>
                                        </table>
                                            
                                        <h5 class="text-info">Datos del Estudiante </h5>
                                        <table class="table table-condensed table-bordered" style="background:#EEEEEE">
                                            <tbody><tr>
                                                <th>Codigo Rude</th><td style="color:#0086DD">${DBStudent.rude}</td>
                                            </tr>
                                            <tr>
                                                <th>Estudiante</th><td style="color:#0086DD"><b>${DBStudent.student}</b></td>
                                            </tr>
                                            <tr>
                                                <th>Estado de matrícula</th><td>${DBStudent.matricula}</td>
                                            </tr>
                                            </tbody>
                                        </table>
                                </div>                                  
                            </div>
                        </div>                      
                       
                        <!-- Start inline form -->
                        <div class="panel rounded shadow" v-if="swRegistryBJP == true" >
                            <div class="panel-heading">
                         
                                <div class="pull-left">
                                    <h3 class="panel-title">Registrar Beneficiario - Busqueda por CI</h3>
                                    <button class="btn btn-success" v-on:click="isHidden = !isHidden"><strong  v-if="isHidden">Cerrar</strong><strong  v-else>Abrir</strong> Formulario de Busqueda</button>
                                    <button type="button" class="btn btn-danger mr-5" data-dismiss="modal">Cancelar</button>
                                    
                                </div>
                                <div class="pull-right">
                                </div>
                                <div class="clearfix">
                                <div v-if="!answerSegip" class="alert alert-danger" role="alert">${messagesegip}</div>
                                </div>                                   

                            </div><!-- /.panel-heading -->
                            <div class="panel-body no-padding" v-if="isHidden">
                                <h5 class="bg-success"></h5>
                                
                                <form name="form" method="post" data-toggle="validator" role="form" id="idSearchStudentForm" class="form-inline">
                                        <div class="form-body">
                                        <div class="row">
                                            <div class="col-md-8 col-md-offset-4">
                                                <input type="text" v-model="newPerson.ci" id="form_ci" name="form[ci]" required="required" class="form-control" placeholder="Carnet Identidad" pattern="[A-Za-z0-9\sñÑ]{3,18}" maxlength="18" autocomplete="off" style="text-transform:uppercase">
                                                <input type="text" v-model="newPerson.complemento" id="form_complemento" name="form[complemento]" required="required" class="form-control" placeholder="Complemento" pattern="[A-Za-z0-9\sñÑ]{3,18}" maxlength="18" autocomplete="off" style="text-transform:uppercase">
                                                
                                                <button v-on:click="lookforPerson()" type="button" class="btn btn-primary"><i class="fa fa-search"></i> Buscar </button>
                                                
                                            </div>
                                        </div>
                                        </div><!-- /.form-body -->

                                    
                                </form>
                            </div><!-- /.panel-body -->
                        </div><!-- /.panel -->
                        <!--/ End inline form -->
                    </div>
                </div>

            
                <div v-if="swRegistryBJP == true" >
                    <div v-if="buscando" class="text-center">
                        <img src="{{asset('img/loading.gif')}}" alt=""> Buscando...
                    </div>        

                    <div v-if="searchActive">
                        <small>            
                            <div class="row">
                                <div class="col-xs-12 col-lg-12">
                                    
                                    <div class="panel-danger">
                                        <div class="panel-heading">
                                        </div>
                                        <div class="panel-body">
                                        <h4><strong>Datos de la persona</strong></h4>


                                        <form>
                                            <fieldset>
                                            
                                            <div class="box">
                                                <label for="First Name">
                                                CI:
                                                </label>
                                                <input type="text" id="FirstName" class="form-control" placeholder="Paterno" required v-model="newPerson.ci" :disabled="existPerson ? '':disabled">
                                                
                                            </div>
                                            <div class="box">
                                                <label for="First Name">
                                                Complemento:
                                                </label>
                                                <input type="text" id="FirstName" class="form-control" placeholder="Complemento" required v-model="newPerson.complemento" :disabled="existPerson ? '':disabled">
                                                
                                            </div>
                                            <div class="box">
                                                <label for="First Name">
                                                Fecha Nacimiento (dd-mm-aaaa):
                                                </label>
                                                <input type="text" id="form_idfecnac" class="form-control jupper" placeholder="dd-mm-aaaa"  v-model="newPerson.fecNac" :disabled="existPerson ? '':disabled">
                                                
                                            </div>
                                            <div class="box">
                                                <label for="First Name">
                                                Paterno:
                                                </label>
                                                <input type="text" id="FirstName" class="form-control" placeholder="Paterno" required v-model="newPerson.paterno" :disabled="existPerson ? '':disabled" style="text-transform:uppercase">
                                            </div>
                                            <div class="box">
                                                <label for="second Name">
                                                Materno:
                                                </label>
                                                <input type="text" id="secondName" class="form-control" placeholder="Materno" required v-model="newPerson.materno" :disabled="existPerson ? '':disabled" style="text-transform:uppercase">
                                            </div>                                                               
                                            <div class="box">
                                                <label for="name">
                                                Nombre:
                                                </label>
                                                <input type="text" id="name" class="form-control" placeholder="Nombre" required v-model="newPerson.nombre" :disabled="existPerson ? '':disabled" style="text-transform:uppercase">
                                            </div>

                                            <div class="box">
                                                <label for="name">
                                                Parentesco:
                                                </label>
                                                <select name="arrApode" id="idarrGenero" v-model="newPerson.parentescoId" class="custom-select form-control" v-model="newPerson.apoderado">  
                                                <option v-for="item in DBApoderado"  :value="item.apoderadoId">${ item.apoderado }</option>       
                                                </select>                                
                                            </div>                                
                                            

                                            <div class="box" v-if="!existPerson">
                                                <label for="name">
                                                Genero:
                                                </label>
                                                <select name="arrGenero" id="idarrGenero" v-model="newPerson.generoId" class="custom-select form-control" v-model="newPerson.genero">  
                                                <option v-for="item in DBGenero"  :value="item.generoId">${ item.genero }</option>       
                                                </select>                                
                                            </div>
                                            
                                            <div class="box">                                    
                                                <input type="buttton" value="Registrar" @click.prevent='saveParents' class="btn btn-success" id="btn">
                                            </div>
                                            
                                            </fieldset>
                                        </form>        
                                                                        
                                            </br>     
                    
                    
                                            </br> 
                                            
                                        </div>
                                    </div>       
                                    
                                </div>
                            </div>
                        </small>
                    </div>

                    <div class="col-md-12" v-if="swConfirm">
                        <table class="table">
                        <thead>
                            <tr>
                            
                            <th scope="col">CI-COMPLEMENTO</th>
                            <th scope="col">PATERNO</th>
                            <th scope="col">MATERNO</th>
                            <th scope="col">NOMBRE(S)</th>
                            <th scope="col">FECHA NACIMIENTO</th>
                            <th scope="col">PARENTESCO</th>
                            {# <th scope="col">OPCION</th> #}
                            <th scope="col">TUTOR BENEFICIARIO</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr v-for="(parent, index) in DBParents">
                            <td>${parent.carnet} </td>
                            <td>${parent.paterno}</td>
                            <td>${parent.materno}</td>
                            <td>${parent.nombre}</td>
                            <td> ${parent.fechaNacimiento}</td>						
                            <td> ${parent.apoderadoTipo}</td>
                            {# <td><a v-if="!swExistParentBJP" href="#" @click="removeParent(parent.id)" > <i class="fa fa-trash text-danger"></i>Eliminar </a></td> #}
                            <td> <a v-if="!swExistParentBJP" href="#" @click="assignParentBJP(parent)" > <i class="fa fa-pencil text-success"></i> Seleccionar Beneficiario </a></td>
                            </tr>
                        </tbody>
                        </table>
                    </div>        
                    
                    <div class="col-md-12" v-if="swExistParentBJP">
                    </br>
                     {# <h3 class="panel-title"><strong> Tutor beneficiario BJP registrado:</strong></h3> #}
                        <table class="table" >
                        <thead>
                            <tr>
                                <th colspan="7" style="text-align: center;"><strong class="text"> Tutor beneficiario Bono Juancito Pinto registrado:</strong></th>
                            </tr>
                            <tr>
                            
                            <th scope="col">CI-COMPLEMENTO</th>
                            <th scope="col">PATERNO</th>
                            <th scope="col">MATERNO</th>
                            <th scope="col">NOMBRE(S)</th>
                            <th scope="col">FECHA NACIMIENTO</th>
                            <th scope="col">PARENTESCO</th>
                            <th scope="col">OPCION</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="success" v-for="(parent, index) in DBParentBJP">
                            <td>${parent.carnet} </td>
                            <td>${parent.paterno}</td>
                            <td>${parent.materno}</td>
                            <td>${parent.nombre}</td>
                            <td> ${parent.fechaNacimiento}</td>						
                            <td> ${parent.apoderadoTipo}</td>
                            <td><a href="#" @click="removeParentBJP(parent.id)" > <i class="fa fa-trash text-danger"></i>Eliminar </a></td>
                            </tr>
                        </tbody>
                        </table>
                    </div>
                </div>

                <div v-if="swRegistryBJP == false" >
                    <h1 style="text-align: center;text-transform: uppercase;color: #d94f14;">${messageRegistryBJP}</h1>
                    <h4 style="text-align: center;text-transform: uppercase;color: #FF4f14;">${messageRegistryBJP2}</h4>
                     <p style="text-align: right;" >
                        <button style="text-align: right;"  type="button" class="btn btn-warning mr-5" data-dismiss="modal">Cerrar</button>
                    </p>
                </div>

            </div>
        </div>
  </div>
</div><!-- /.modal-dialog -->
<script>


var app = new Vue({
    delimiters: ['${', '}'],
    el: '#app',
    data: {

        cival:'',
        complementoval:'',
        
        buscando:false,
        swproceso:false,
        swstudent:false,
        swperson:false,
        swnewperson:false,
        swcreatestudent:false,
        message:'',
        dataStudent:{withoutsegip:false, casespecial:false, excepcional:false},
        newStudent:{},

        DBGenero:{},
        DBParents:{},
        DBApoderado:{},
        newPerson:{personId:'',ci:'', carnet:'', valSegip:'',complemento:'',paterno:'',materno:'',nombre:'',fecNac:'',parentescoId:'',idInscription:{{idInscription}}},
        DBStudent:{studentId:'',ci:'', carnet:'{{arrStudent.carnet}}', complemento:'{{arrStudent.studentYearOld}}',student:'{{arrStudent.student}}',fechaNacimiento:'',idInscription:{{idInscription}},studentYearOld:{{arrStudent.studentYearOld}}, nivel:'{{arrStudent.nivel}}', grado:'{{arrStudent.grado}}', paralelo:'{{arrStudent.paralelo}}', turno:'{{arrStudent.turno}}', rude:'{{arrStudent.rude}}' , matricula:'{{arrStudent.matricula}}' },
        existPerson:false,
        swRegistryBJP:'{{swRegistryBJP}}',
        messageRegistryBJP:'{{messageRegistryBJP}}',
        messageRegistryBJP2:'{{messageRegistryBJP2}}',
        swConfirm:false,
        swExistParentBJP:false,
        message:'',
        messagesegip:'',
        disabled:'',
        searchActive:false,
        answerSegip:true,
        isHidden: false
        
        
    },
    mounted(){
        this.loadData();        
        //var selector = document.getElementById("form_idfecnac");
        //Inputmask("datetime",{ inputFormat: "dd-mm-yyyy", outputFormat: "mm-yyyy-dd", inputEventOnly: true}).mask(selector);
    },
    methods: {
        lookforPerson: function(){
            this.buscando = true;
            this.searchActive=false;
            this.existPerson   = false;
            this.message   = false;
            this.swConfirm = false;
            this.swExistParentBJP = false;
            this.answerSegip = true;
            if(this.newPerson.ci.length == 0){
            this.message = 'debe introducir un carnet';
            this.buscando = false;
            return;
            }

            axios.get(Routing.generate('special_registerparents_lookforperson', this.newPerson))
            .then(response => {
              if(response.status == 200){
                this.existPerson   = response.data.existPerson;
                this.disabled   = response.data.existPerson;
                this.newPerson.valSegip   = response.data.arrPerson.valSegip;                
                this.newPerson.paterno = response.data.arrPerson.paterno;
                this.newPerson.materno = response.data.arrPerson.materno;
                this.newPerson.nombre = response.data.arrPerson.nombre;

                this.newPerson.carnet = response.data.arrPerson.carnet;
                this.newPerson.fecNac = response.data.arrPerson.fecNac;
                this.newPerson.complemento = response.data.arrPerson.complemento;
                this.newPerson.personId = response.data.arrPerson.personId;
                this.searchActive = response.data.searchActive;
                this.DBGenero    = response.data.arrGenero;
                this.DBApoderado = response.data.arrApoderadoTipo;
                this.message   = response.data.message;

              }
                console.log(this.newPerson);
                this.buscando = false;
            })
            .catch(e => {
                console.log(e);
                this.buscando = false;
            });
        },

        saveParents: function(){
            this.buscando = false;
            this.searchActive=true;
            this.existPerson   = true;
            this.message   = false;
            this.answerSegip   = true;            
            Swal.fire({
                title: 'Registrar Beneficiario?',
                text: "esta seguro de CONTINUAR con el registro",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, proceder',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {

                        axios.get(Routing.generate('special_registerparents_saveParents', this.newPerson))
                        .then(response => {
                        if(response.status == 200){
                            this.DBParents = response.data.datos.arrParents;
                            this.swConfirm = response.data.datos.swConfirm;
                            this.DBParentBJP = response.data.datos.arrParentBJP;
                            this.swExistParentBJP = response.data.datos.swExistParentBJP;
                            this.answerSegip = response.data.datos.answerSegip;
                            this.messagesegip = response.data.datos.messagesegip;

                            this.searchActive = false;
                            this.isHidden = false;


                            this.newPerson.valSegip   = true;                
                            this.newPerson.paterno = '';
                            this.newPerson.materno = '';
                            this.newPerson.nombre = '';

                            this.newPerson.carnet = '';
                            this.newPerson.ci = '';
                            this.newPerson.fecNac = '';
                            this.newPerson.complemento = '';
                            this.newPerson.personId = '';


                        }
                            this.buscando = false;
                        })
                        .catch(e => {
                            console.log(e);
                            this.buscando = false;
                        });
                }        
            })
        }, 
        loadData(){
            axios.get(Routing.generate('special_registerparents_loadData', this.newPerson))
            .then(response => {
                this.DBParents = response.data.datos.arrParents;
                this.swConfirm = response.data.datos.swConfirm;
                this.DBParentBJP = response.data.datos.arrParentBJP;
                this.swExistParentBJP = response.data.datos.swExistParentBJP;                
            })
            .catch(e = {

            });					
        },
        removeParent:function(idremove){
            this.buscando = false;
            this.searchActive=false;
            this.existPerson   = false;
            this.message   = false;
            this.answerSegip   = true;
            Swal.fire({
                title: 'Eliminar Persona?',
                text: "esta seguro de CONTINUAR con la eliminación",
                type: 'question',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, proceder',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {

                        axios.get(Routing.generate('special_registerparents_remove', {idremove:idremove, idInscription:this.newPerson.idInscription}))
                        .then(response => {
                        if(response.status == 200){
                            this.DBParents = response.data.datos.arrParents;
                            this.swConfirm = response.data.datos.swConfirm;
                            this.searchActive = false;
                            this.isHidden = false;


                            this.newPerson.valSegip   = true;                
                            this.newPerson.paterno = '';
                            this.newPerson.materno = '';
                            this.newPerson.nombre = '';

                            this.newPerson.carnet = '';
                            this.newPerson.ci = '';
                            this.newPerson.fecNac = '';
                            this.newPerson.complemento = '';
                            this.newPerson.personId = '';


                        }
                            this.buscando = false;
                        })
                        .catch(e => {
                            console.log(e);
                            this.buscando = false;
                        });
                }        
            })
        },
        removeParentBJP:function(idremoveBJP){
            this.buscando = false;
            this.searchActive=false;
            this.existPerson   = false;
            this.message   = false;
            this.answerSegip   = true;
            Swal.fire({
                title: 'Eliminar asignación de Beneficiario?',
                text: "esta seguro de CONTINUAR con la eliminación",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, proceder',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {

                        axios.get(Routing.generate('special_registerparents_removeParentBJP', {idremoveBJP:idremoveBJP, idInscription:this.newPerson.idInscription}))
                        .then(response => {
                        if(response.status == 200){
                            this.DBParents = response.data.datos.arrParents;
                            this.DBParentBJP = response.data.datos.arrParentBJP;
                            this.swConfirm = response.data.datos.swConfirm;
                            this.swExistParentBJP = response.data.swExistParentBJP;
                            this.searchActive = false;
                            this.isHidden = false;


                            this.newPerson.valSegip   = true;                
                            this.newPerson.paterno = '';
                            this.newPerson.materno = '';
                            this.newPerson.nombre = '';

                            this.newPerson.carnet = '';
                            this.newPerson.ci = '';
                            this.newPerson.fecNac = '';
                            this.newPerson.complemento = '';
                            this.newPerson.personId = '';


                        }
                            this.buscando = false;
                        })
                        .catch(e => {
                            console.log(e);
                            this.buscando = false;
                        });
                }        
            })
        },        
        assignParentBJP:function(apoderadoInscription){
            this.buscando = false;
            this.searchActive=false;
            this.existPerson   = false;
            this.message   = false;
            this.answerSegip   = true;
            Swal.fire({
                title: 'Asignar Beneficiario?',
                text: "Esta seguro de CONFIRMAR la asignación de la Persona como beneficiario para el Bono Juancito Pinto",
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#d33',
                confirmButtonText: 'Si, proceder',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.value) {

                        axios.get(Routing.generate('special_registerparents_assignParentBJP', {apoderadoInscription:apoderadoInscription, idStudentInscription:this.newPerson.idInscription}))
                        .then(response => {
                        if(response.status == 200){
                            this.DBParentBJP = response.data.datos.arrParentBJP;
                            this.swExistParentBJP = response.data.datos.swExistParentBJP;
                            this.searchActive = false;
                            this.isHidden = false;


                            this.newPerson.valSegip   = true;                
                            this.newPerson.paterno = '';
                            this.newPerson.materno = '';
                            this.newPerson.nombre = '';

                            this.newPerson.carnet = '';
                            this.newPerson.ci = '';
                            this.newPerson.fecNac = '';
                            this.newPerson.complemento = '';
                            this.newPerson.personId = '';


                        }
                            this.buscando = false;
                        })
                        .catch(e => {
                            console.log(e);
                            this.buscando = false;
                        });
                }        
            })
        }    
      
      

  },
   

});


var showListStudent = function(iecId, infoUe){
  
    $.ajax({
      type: 'post',
      data: ({iecId: iecId, infoUe: infoUe}),
      url: "{{ path('alter_inscriptionstudent_showListStudent') }}",
      beforeSend: function () {
        $("#idstudents").empty();
        $("#idstudents").append('<div style="text-align:center"><img src="{{asset('img/loading.gif')}}" /></div>');
      },
      success: function (data) {
        $("#idstudents").empty();
        $("#idstudents").append(data);
        $('#modal').modal('hide');
      },
      statusCode: {
              500: function () {

          },
          404: function () {

          }
      }
    });

};
</script>

