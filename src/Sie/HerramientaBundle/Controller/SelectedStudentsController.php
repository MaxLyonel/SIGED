<?php

namespace Sie\HerramientaBundle\Controller;

use Symfony\Component\HttpFoundation\Request;
use Symfony\Bundle\FrameworkBundle\Controller\Controller;
use Symfony\Component\HttpFoundation\Session\Session;
use Symfony\Component\HttpFoundation\JsonResponse;
use Doctrine\ORM\EntityRepository;
use Sie\AppWebBundle\Entity\EstudianteNota;
use Sie\AppWebBundle\Entity\EstudianteQuipus;


class SelectedStudentsController extends Controller{

    public $session;
    public $swConfirmGlobal;
    public $urlreport;
    
    public $ue_validas;

    public function __construct() {
        $this->session = new Session();
        $this->swConfirmGlobal = false;
        $this->urlreport = false;

        $this->ue_validas = array(
            60620038,60700066,60700005,81350026,81960052,80720014,81850030,71710013,80720137,62480020,81350006,80690002,80690043,82220091,81410093,80720086,80570010,70720013,82170995,70720044,80660099,52480041,81710082,81850022,70700033,60660025,71700033,70710020,81870046,80720120,72220024,82450023,80720172,81410038,81350020,71850002,82480045,60700044,82440008,80720044,81710028,71700030,81700029,70700072,82480025,20710009,82480013,60700008,80690038,80700118,80580022,80660088,81710046,81870024,81981657,80660066,71710010,80720182,60700057,80720091,81410054,81410049,82220088,60620028,41910022,81350036,80620034,40680011,70700057,50620010,81410033,70660005,82480004,80570013,50660012,81960084,80580032,82450010,70700029,81340034,71850021,80570022,60660028,80720108,80720147,81390009,70620022,60700045,70570002,71710021,60700039,81710054,70660003,80700042,81150007,81340028,80620036,80570009,71700001,20710003,81680064,80700115,81340083,81850021,81200015,80720154,82480038,81200006,81710088,81920012,81870015,81410042,50660013,70690012,80720156,62470044,50620019,72220040,80580059,81840001,81410150,60620096,81340038,60620003,81390004,70710017,80620049,81870016,70710073,71940024,81340056,81340030,80720011,82450017,40710009,70690032,70620071,81700011,81870039,80720068,81410044,81340020,60690018,72480046,70700020,81340014,81870017,81710106,80720008,81960050,80690017,81850009,82480027,82440002,81700027,50660008,60620086,81720050,70700011,80720126,80700066,80660159,80580045,80700034,81720051,80660160,70720003,81150013,50620014,71710015,81340023,81200018,80720004,62470014,61710096,81410092,81090002,80580002,62470015,50620025,80620053,72220063,81710103,70670017,82480017,81350038,80580024,60660036,81680045,81710043,81340078,82170015,80700073,80690014,81410113,81710098,60620039,61710092,81710113,81710041,81350011,60660021,71720015,82480028,81710042,80660155,60690022,80690034,80720111,70690003,80580021,81720078,82480053,62480011,80660204,81870011,81410030,80720042,81720061,70690033,81340045,40730088,80720025,80660152,71710011,80700022,81340001,70700023,62470047,81720030,80660101,80720053,81710033,81710100,80690054,72220027,80550010,62480012,80690035,70670002,80690006,80720109,50620023,71700014,70660012,81680056,62470065,80570037,71700040,80700041,70710045,71700025,81710003,70700056,81410035,72220090,81870028,81960051,81340053,81710019,50620012,80720083,80660107,70720007,71720004,80720107,72220073,80720117,72220049,50620015,40680014,60660037,71710002,62480016,70700012,80660059,71700006,70700036,62480018,80660105,80700008,81340063,81981452,40710025,81410041,60700027,82480012,80700025,80580028,80570033,80660103,70700016,81410047,62470064,40710032,80620035,80720177,60700070,80660118,81710009,81340044,70710024,81720034,70670013,81340052,60700033,60620102,81720016,72220061,82220067,82450020,81710110,72220059,80700064,62440025,80660060,80720197,81400068,80660112,80570029,81710035,52480022,60700018,80720174,70620055,81390024,80720215,60570006,62480019,81960130,60700047,60570005,80720183,81720026,60700020,81710052,71720050,81710008,81350010,62470016,71700003,81150015,80690042,82440007,80690018,70700042,80700003,40680001,60660030,80670055,80570038,80720104,70700021,71710004,80580001,81960056,62470004,81850039,82480062,80620080,60710050,80550019,80720021,50660001,81700044,82470064,80550015,80690011,81340003,70670009,80620029,70700045,81340004,71720006,71710039,81720023,80690028,62440023,72220015,60660051,80700083,80700013,70580003,80660104,80700026,61710033,81710095,61710091,70690004,81350001,81350013,80700060,82480019,62470042,70720034,80580058,80580025,80720096,71700035,81410048,81400012,81710002,70700049,60690017,81870040,41890001,81150018,81700006,80620046,80700017,82450013,71700034,81340032,80580031,70710069,62470001,81410026,81850034,70620018,70720015,81090003,50620030,70720037,81700005,71710019,80720194,81700015,81710102,80720082,81980046,70710050,70700047,82480010,71720045,80720166,80660078,70720002,80700050,62480003,70700005,70700037,80720090,60660043,70690007,70690008,71710052,81720077,80660149,81710021,71720008,80660121,81960039,71710044,80550008,80700131,81870020,80720181,82450002,60660015,81710107,70620030,81340016,60700032,61710075,70720026,60620026,80720135,82480059,40710002,80660119,61890004,71700017,81200008,70620054,80690036,72220028,80720129,70660006,50620024,81870004,71700009,80660097,80580033,72440016,80680046,80700040,70710066,81720019,71720032,72220006,81960136,81710023,81870041,80690015,81350009,72440005,71720021,60700026,81720049,81700049,82160083,81700002,81960123,80570002,80580011,80720013,70720014,81090001,80700033,81720035,80660106,81710116,80700005,80620031,81340047,71720056,81710020,70670022,61710069,81350043,80660049,80570024,70690035,81410037,81710010,72220088,80720077,20710013,62470066,80660122,82480042,81710040,70570006,60700050,81350007,52480025,80580018,80570007,81700013,80720092,82480048,81870007,60700015,60700049,70570012,70690022,80700102,81720025,60700022,80720029,72220026,80620076,80660120,70720056,50660006,80700090,82220046,82480043,81720058,81720043,81700052,80690030,80570032,71700029,60620029,70700051,70660009,72220003,62470020,81390014,80690005,81710118,70700018,81960105,60690009,50620026,80700092,80700047,80720084,81710115,81720066,81410034,20710015,80660096,80720141,82480058,81720036,70700031,71710029,80580027,81960054,60710027,60690014,82220063,80580042,52480033,81390018,62440024,81730256,62470018,80660050,72220043,80620072,70620050,80620023,80660114,81960085,81340050,80690019,70720051,71710027,60570003,81960058,71200014,82160081,81710053,81850049,80700059,80570017,61710032,60700053,81150006,81710034,81340008,71720055,71720057,72440013,60660048,72170006,60620089,70570013,80550017,80580019,71850009,81870013,80720043,82480030,81410053,52480035,80580013,70700061,81720067,80700103,81350017,80580006,81340079,80570031,80700036,81700034,71710037,71720007,60700019,60700029,80720153,72480038,80660055,80690031,80700028,81710093,70690021,81960083,81710005,70670008,81960154,40710007,81720011,81410029,80720020,70570014,72220047,80550005,71200005,80720193,80660116,70700003,71850019,80620073,71720019,81870056,60710048,81700017,82480040,50620028,80700072,80690004,81150008,70700013,80700098,81700028,70620011,70710012,60620043,81870012,81850020,80690050,81710058,80700069,81410146,81340022,81710007,81720048,80660148,40710004,81340019,81710057,60710014,71710023,81340024,81340066,70710047,81410091,40710010,62480007,80720076,70700053,62470058,80660070,81720001,72480013,82220078,60570002,81720075,80720036,81150020,80690033,80700067,80730759,70700019,71710016,40680005,82220121,80720009,80700127,81720040,81340067,70710021,80660094,80720148,60620001,81850029,60700024,80720019,40710001,72220051,70670010,80700051,70690020,71710006,70670024,72450026,60660038,80690037,60690012,70720038,80570028,70690036,80550007,80720024,71720023,81340037,72220081,80660062,80550023,81981667,81720041,80620078,81981671,81960104,80580020,60620025,72480014,80660091,71710012,80700045,60620005,81720018,70620021,81960059,80720224,81870002,81850037,70570018,81720028,51980110,81680009,80690029,60710060,71700018,60660003,81710024,81340049,82220055,70700006,80700108,82160079,70550006,80720105,81960131,80570019,80580003,80700019,82480007,81340041,81340057,60710057,71700026,81710129,60660029,80660077,62470017,82160024,80690008,81700025,50620027,81720004,70710015,80720103,80720095,71710014,60620062,81340051,72160003,80720186,72480041,80700024,60700063,70710051,81410153,81870045,80570014,62470005,81720008,80700035,82160046,80620009,60700036,71710001,60700014,71720020,62460068,40710008,81720070,81710022,60690015,60700012,81720009,60700040,71720014,62470007,80720169,60660045,81870055,81981659,81710029,80660061,80700120,70700039,81870030,71720005,72220086,81710051,81870018,81710036,80660065,60390009,72220031,60710026,71700037,71710045,80700065,70660023,81870054,71720047,70550003,52480036,81710006,72220045,82220103,70570016,72220012,80700089,81410046,81720014,81960129,72220010,82160045,60660055,80660063,81870052,80720066,81720046,82220051,60700060,71700005,52480017,80660081,72220038,70710068,70620058,80550013,81870029,81720045,40710022,70710067,72220008,82160059,81710038,81720065,71720022,80720175,50620007,80720058,81960124,80720168,40710024,81410043,81720047,80700007,70720005,80660113,52480020,62470019,80550021,40680023,81400036,62470056,81340073,80570016,80720124,70700035,82440004,81710066,81410159,80720158,50660004,80720155,60710051,71700031,81410112,81710114,62480002,50620006,81870032,72480011,80700018,70710026,81730129,81340005,81960038,81720054,70720046,80660147,80620050,81710025,80720144,71710054,81340018,82170019,81710090,82480008,81700032,80550001,62470067,80700046,80670089,72220037,60660017,81870019,50620031,20710014,71720026,80720012,70700022,81390016,81720002,80700055,81350004,70660016,60620007,80580060,80720027,80720189,72480004,52480034,80660184,70550001,82480006,70670016,81720012,72170009,81850038,81870026,60660041,62480004,80570025,70700040,70670012,71720018,70700027,40710034,60620002,81410152,81870037,80570015,70570008,80670028,80670057,81850036,80720039,80700030,81710092,81870001,80550016,80700111,80570005,80700128,62480015,80660072,82480039,61710037,62470045,70570009,70700038,80720184,60660019,80620002,81340081,81710079,81710044,60710054,81680091,70720011,50620001,80720100,70690023,81350016,82160085,80700027,72200005,81720062,60700028,82220045,60620037,70670005,81730105,60700051,80720030,81720094,70720020,80720040,81710083,80550020,81710026,81870014,81150004,70710013,80700074,70570004,81340040,81960048,70720025,81981668,81870027,81410045,81850031,80700043,80700001,60660002,60660014,72480007,60620032,80620059,82220158,81710096,80700038,72220018,70690027,60660026,71710056,70690006,70620005,80720218,80660087,80720136,80480199,70710018,70720033,80700011,60700010,80690016,80720088,81390021,62470011,80620018,81340006,71700021,80720185,81340035,70700044,80590027,80620045,70710074,70710049,80720081,60700009,81720015,81340012,81340070,70670003,60620092,71200006,80720031,60690010,70720024,81390005,81410095,70690014,80700058,81850052,20710011,80620060,81680048,72480044,60700065,80700094,80720050,81350012,81700003,81710049,80720075,70720004,80700031,62480009,70550008,81340069,70660013,60660027,81850015,62470012,72220014,60690007,50620009,80580035,81150003,80700096,70700066,82480003,80700009,50660005,60620027,72220082,70700028,81680039,81720029,81720095,61710080,81700016,80720151,81710032,70570003,71720016,80720034,70720030,80580043,81890138,72220016,71710007,81700008,80580041,70720028,40710014,60620017,80580026,50660014,80720195,80570008,81720087,82450016,80720207,80660076,81680057,60700023,80570036,81720090,80660092,80720018,72220079,82450015,70710025,81200001,70660008,52480024,80720067,80700117,80580051,80700053,60690004,70700054,70660001,81710018,60620009,81870009,80720005,81200022,81700024,80570041,82480005,80620003,60660001,80700032,82220096,80720112,80720063,71710049,80660053,71890041,60660049,80550006,70700026,81710011,62480005,80700057,80660079,72220019,82220119,70690016,82480069,80550025,80690010,81340058,80700044,80720221,72480012,81410032,80720056,81720057,80700095,60660018,81400023,62480010,80690003,70720035,71710032,80720057,80620032,71700012,70620026,70620004,81710117,81680028,80620030,80700062,81710104,81700050,81720060,81870023,80620047,81720007,80720087,80700052,80720006,71710031,82440006,70710065,81720092,80720157,71710024,71200011,81720056,80720089,81980051,80700029,62470008,80720078,81340033,81410027,52480026,81720005,80700106,80700054,81710128,60690013,80660115,81850014,81700012,72220022,70620010,81720039,70620053,80720065,80570006,52480031,80720048,62470002,60690016,80720069,70700007,60620064,72220035,81390015,80700021,60620061,70660015,81200003,71700019,70690013,60620031,70690028,60700013,80720142,60700037,81720024,60660016,52480037,81150010,60700001,60660011,50660016,80720079,60660040,80700119,80720110,81340011,80580029,60700006,70700008,61710093,71710046,81350034,70710058,81720044,81390027,70660021,80720085,70570007,81720084,81390023,80660098,80580007,71850004,70700041,80620056,70620003,70620017,71850007,72160002,80660058,80580030,62470063,60660008,70690030,80720062,80720121,81390006,80660158,60700062,60700002,70620033,80720052,72220017,80720192,81710013,81390025,81410051,60700021,81340042,60700064,81710048,81410036,81340007,71720013,81720073,80620033,60700017,70660010,81870021,80700068,60620021,70700010,81710067,52480030,81720037,70620001,72480006,80720102,50660007,81410117,70720052,61960010,80660123,80700107,81340071,81410127,50620016,70720006,80580034,80700061,71720003,50620003,60710017,70670018,81870010,81340080,81960144,60620060,81350008,70620060,80720198,70720049,81870022,60700048,81981666,80700104,71400002,61710074,81410125,80720028,80690001,70720027,80660084,60700054,82160039,60710055,70570017,61710022,60620091,71720017,70570015,70620013,81720021,61710089,80720170,81710014,81150002,81730130,80660074,82450021,62470068,80620044,82220114,71200003,62470059,60700038,80580036,70700060,50660010,80700012,60620041,70700050,20710002,80720167,60660022,80620051,82160026,82450018,60700031,61710036,80700010,81340055,60660024,60620042,70660007,80620037,81340027,70700025,81960086,60660035,81710055,60620033,81720096,80660080,81680012,60660034,80660054,72220002,62470053,81890139,81340021,81340046,81710126,70690002,70690018,82480046,81410039,81850032,71720048,60620020,81390013,80720033,71850003,81710062,70660014,80580037,60660010,80690009,82480047,80720017,60660044,80590023,80660051,80720049,71720046,81710119,80670074,81350024,81410068,81720013,50620022,72220009,20710016,80700093,82480065,81960043,81700047,72220060,81720006,81730244,62470057,70620014,80720059,80660157,70570010,61710038,61390002,80660150,80720010,80660068,70720019,80700086,70700059,80720191,70670015,70710053,70660004,60700055,52480023,81410050,80720116,70690005,81710056,81150009,80720061,71710055,70690001,60570004,80670084,81960042,71700008,80620038,81720052,80720140,50620002,81340026,60620101,80660073,81340029,80690025,80550012,62480022,80620054,60700041,81700007,71850010,80580017,80980649,81710094,80720180,81960132,81850040,80620052,72220044,80660057,70710057,72480010,70700001,60620051,61900001,70700009,82480014,70690019,81720053,70660017,72220080,80570021,80570004,80620022,80720041,80700091,80720047,70660011,72220021,80980648,81720055,80660117,70550004,82480022,60620045,80700004,81680092,80660082,70670004,82220095,72220013,72480033,81710039,70690031,80660202,80720016,60660046,80720188,80660067,71710009,62470071,70660019,60690023,70700048,80700123,80570030,82480023,81960053,70620023,70720053,80690013,81960041,80700099,82480020,70710027,70570005,60660047,52480018,80720165,70700058,50620021,80720171,71700007,80580010,50660002,80720106,71720058,70700024,60620040,80620005,71710038,80700087,80720064,71710003,60700071,60660012,20710007,60660007,62480001,70720018,81410134,40710011,80550024,80690032,71710026,40710029,82480037,80720115,70720029,71720001,81710108,62470060,70570011,40680002,72220058,71350003,80700116,81410016,82480051,81700004,60700011,60660006,71710041,62480021,70620069,20710006,80620055,81710085,80620019,81720063,80700023,82160048,82440005,80720150,61710078,81710037,81350002,80660146,80580040,70620049,70720017,70700052,80570012,70720021,80660182,81720068,80570003,60620004,81410115,80570040,72220030,81390012,70700017,81720069,80580005,82450012,60700035,80720007,60700042,81710004,80580044,82450011,70720043,50620011,70700032,82480029,81200007,80700071,82480011,81410122,80580056,80720163,82220097,70690015,81340065,70700004,80570001,60620015,81340025,80550002,82160036,70700043,81710047,70670014,81710122,80720098,81710030,60620016,60660032,80720038,70720032,81340036,81720093,82450019,80550004,70720031,80660144,81850013,80660052,81390019,81710016,62470023,70700064,72220032,81410028,70670023,80580039,80570023,60700043,71710040,80550009,60620034,81350041,80720001,80660154,70670001,81720097,72220011,70620070,60620087,81410120,80700109,81350014,70720045,70620016,60700052,80720002,72220041,80620058,80720139,82470060,40680012,81720038,80700088,80660102,81720022,81340010,70720009,80720023,81720033,80720152,81710111,82220093,40680013,82440003,81340061,80720187,70660022,61710021,81410057,70570001,80550014,71700038,70690017,81720017,80700070,81390022,50660015,80580008,40680004,50660011,80660153,80690056,60710052,70720008,70710023,81720032,81870003,72220007,72220084,70670006,82160001,81710127,62470061,70660018,70620057,81350022,80660093,71710008,82170021,80720037,61710019,70620024,81350021,60620090,80670053,60690019,60620085,81340048,52480021,52480028,81680035,81720010,80720035,80720118,80570034,82170020,70700002,70550007,71720043,81870025,70710046,80670048,70670025,71710028,80620021,81720089,81850016,82220056,80720003,72480034,81340002,80660151,60700046,81981651,70550002,81710065,60660009,60660005,52480029,81870051,52480019,81720027,80720161,60700067,60700016,80660089,70700065,72220033,81350005,80720072,80700110,70660020,81410056,81390010,80730385,62470048,81710112,80720173,40710030,80700097,60690002,60570001,71720024,81720074,50620013,80570027,81340017,80670035,70710019,70700063,80720055,72480015,72220023,81870038,81720079,81340013,70720047,71710020,80700039,72220091,82480060,60390025,80700077,80720143,62470062,80590024,81710084,81700030,71200013,81340064,80720097,80700063,81720085,81710001,60660042,71710005,70670011,80570035,71700004,70620019,60570007,82220105,72220083,81700001,62470009,80660083,80700082,82440001,60660050,81680051,80720054,72220078,62470013,70670019,71710042,80580053,70720010,71400003,81150019,80720073,70700046,80620061,80660071,60700072,72220034,71700024,81150012,82480009,40680020,80580038,82480002,72220065,72480008,70710014,80570026,71700032,81390020,81710031,80620062,81720031,70720023,81090005,60620071,50620020,80660183,81340031,80660069,71720029,80700006,81340043,71700022,60700061,80700085,80700081,80580012,81340062,81710091,60620044,80660100,81340054,71850005,81960040,60660023,81390001,80700084,71710050,80720149,81720064,80570011,71700020,70720048,81390017,71400001,61710030,80550022,71850001,80660075,71710017,71720025,80690049,71710030,72220020,62470003,71710047,81730097,81870035,60620024,80720045,72220001,81090004,82220137,81720020,71710022,81981670,60620006,80700100,80720022,82480001,80720015,81720076,71850014,80700101,81340039,82220061,80690040,82470031,81390008,80720114,72220042,50620029,80720080,80550003,81710109,62470046,72220025,61710061,71700013,81150011,80700015,70700055,70720016,72220077,70670007,81710123,60660031,60660020,80620057,70720022,71850008,70670020,60620036,82220145,81720042,60660033,80720196,80660110,60700025,60620011,71720049,71700015,61390001,80580009,81340009,50660009,80720032,80690012,81710101,70620028,80720159,81710012,71720010,81710059,71720051,82480054,82480024,71720031,72220004,72220005,80620007,80660086,80690051,80620041,70690010,80620039,80660085,80620042,80690021,60620018,70690029,80620066,80620040,80620026,80620008,80690023,70690011,80690020,80690027,80620028,80690022,70690009,80620027,80690026,80720190,80620043,81710060,81850043,82470013,82490014,81870005,81870006,70720001,50620008,60700056,80700078,80720060,60700069,80700129,80720051,50620005,60700007,80720214,80700002,80720210,80690059,81340085,82220212,82160093,81710120,82480063,62440031,71200022,52480039,82480064,70670027,81340084,52480038,70670026
        );
    }

    public function indexAction(){
        $ie_id=$this->session->get('ie_id');
        if($ie_id && in_array($ie_id,$this->ue_validas))
        {
            $swregistry = false;
            $id_usuario = $this->session->get('userId');
     		if (!isset($id_usuario)) {
                return $this->redirect($this->generateUrl('login'));
            }        

            $studentsQuipus = $this->getStudentsQuipus($this->session->get('ie_id'));
            //dump($studentsQuipus);die;
            if($studentsQuipus){
            	$swregistry = true;
            }

            return $this->render('SieHerramientaBundle:SelectedStudents:index.html.twig',array(
            	'studentsQuipus'=>$studentsQuipus,
            	'swregistry'=> $swregistry,
            	'swConfirmGlobal'=>$this->swConfirmGlobal,

            ));
        }
        else
        {
            return $this->redirect($this->generateUrl('login'));
        }

    }
    public function loadDataAction( Request $request ){
    	$response = new JsonResponse();
        $estudiante = $request->get('estudiante', null);
        $opcion = $request->get('opcion', null);

        $em = $this->getDoctrine()->getManager();

    	$studentsQuipus = $this->getStudentsQuipus($this->session->get('ie_id'));

    	return $response->setData([
            'status'=>'success',
            'datos'=>array(
                'arrStudents'=>$studentsQuipus,
                'swConfirm'=>(sizeof($studentsQuipus)==2)?true:false,
                'swConfirmGlobal'=>$this->swConfirmGlobal,
                'urlreport'=>$this->urlreport,
            )
        ]);

    }
    private function getStudentsQuipus($sie){
    	$em = $this->getDoctrine()->getManager();
    	$studentsQuipus = $em->getRepository('SieAppWebBundle:EstudianteQuipus')->findBy(array('institucioneducativa'=>$sie));
//dump($studentsQuipus);die;
    	$arrStudent = array();
    	if($studentsQuipus){
    		foreach ($studentsQuipus as $value) {
    			if($value->getEstado()){
    				$this->swConfirmGlobal = true;
    			}else{
    				$this->swConfirmGlobal = false;
    			}

		    	$arrStudent[] = array(
		            'id'=>$value->getId(),
		            'nombre'=>$value->getNombre(),
		            'paterno'=>$value->getPaterno(),
		            'materno'=>$value->getMaterno(),
		            'carnet'=>$value->getCarnetIdentidad(),
		            'idGenero'=>$value->getGeneroTipoId(),
		            'genero'=>$em->getRepository('SieAppWebBundle:GeneroTipo')->find($value->getGeneroTipoId())->getGenero() ,
		            'estInsId'=>$value->getEstudianteInscripcion()->getId(),
		            //'estInsId'=>$inscripcionesEfectivas[0]['studentInscriptionId'],
		            'institucioneducativaId'=>$value->getInstitucioneducativa()->getId(),
		            'institucioneducativa'=>$em->getRepository('SieAppWebBundle:Institucioneducativa')->find($value->getInstitucioneducativa()->getId())->getInstitucioneducativa() ,
		            'codigoRude' => $value->getCodigoRude(),
		            'nivel'=>$em->getRepository('SieAppWebBundle:NivelTipo')->find($value->getNivelTipoId())->getNivel(),
		            'grado'=>$em->getRepository('SieAppWebBundle:GradoTipo')->find($value->getGradoTipoId())->getGrado() ,
		            'paralelo'=>$em->getRepository('SieAppWebBundle:ParaleloTipo')->find($value->getParaleloTipoId())->getParalelo()  ,
		            'nivelId'=>$value->getNivelTipoId(),
					'gradoId'=>$value->getGradoTipoId(),
					'paraleloId'=>$value->getParaleloTipoId(),
		        );
    		}
    		if($this->swConfirmGlobal){
    			$this->urlreport =  $this->generateUrl('donwload_ddjjStudentsQuipus', array('sie'=>$this->session->get('ie_id')));
    		}
    	}
    	return($arrStudent);
    }



    public function buscarAction(Request $request){
        $response = new JsonResponse();
        $estudiante = $request->get('estudiante', null);
        $opcion = $request->get('opcion', null);

        $em = $this->getDoctrine()->getManager();
        // VALIDAMOS DATOS DEL ESTUDIANTE
        $arrStudent = array();
        switch ($opcion) {
            case 1:
                $codigoRude = mb_strtoupper($estudiante['codigoRude']);
                $estudiante = $em->getRepository('SieAppWebBundle:Estudiante')->findOneBy(array('codigoRude'=>$codigoRude));
                $codigoRude = $estudiante->getCodigoRude();
                break;
            case 2:
                $carnet = $estudiante['carnet'];
                $complemento = $estudiante['complemento'];
                $estudiante = $em->getRepository('SieAppWebBundle:Estudiante')->findOneBy(array('carnetIdentidad'=>$carnet, 'complemento'=>$complemento));
                $codigoRude = $estudiante->getCodigoRude();
                break;
        }
        $swStudent = true;
        if (!is_object($estudiante)) {
            return $response->setData([
                'status'=>'error',
                'msg'=>'Los datos del estudiante no son válidos'
            ]);
			$swStudent = false;
        }

		$studentsQuipus = $this->getStudentsQuipus($this->session->get('ie_id'));        
		
		if (sizeof($studentsQuipus)>0 ) {
			if(sizeof($studentsQuipus)==2) {
	            return $response->setData([
	                'status'=>'error',
	                'msg'=>'El registro de estudiantes esta completo'
	            ]);
	            $swStudent = false;
        	}
        	if($estudiante->getGeneroTipo()->getId() == $studentsQuipus[0]['idGenero']){
	            return $response->setData([
	                'status'=>'error',
	                'msg'=>'Ya registro un estudiante con genero '.$estudiante->getGeneroTipo()->getGenero()
	            ]);
	            $swStudent = false;
        	}        	
			
        }

        // BUSCAMOS UNA INSCRIPCION CON ESTADO EFECTIVO EN LA GESTION 2020
        $inscripcionesEfectivas = $em->createQueryBuilder()
                            ->select('ei.id as studentInscriptionId, nt.id as idNivel, grat.id as idGrado, IDENTITY(e.generoTipo) as idGenero,IDENTITY(iec.paraleloTipo) as idParalelo,IDENTITY(iec.cicloTipo) as idCiclo,
                             IDENTITY(iec.institucioneducativa) as institucioneducativaId, inst.institucioneducativa' )
                            ->from('SieAppWebBundle:EstudianteInscripcion','ei')
                            ->innerJoin('SieAppWebBundle:Estudiante','e','with','ei.estudiante = e.id')
                            ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso','iec','with','ei.institucioneducativaCurso = iec.id')
                            ->innerJoin('SieAppWebBundle:Institucioneducativa','inst','with','iec.institucioneducativa = inst.id')
                            ->innerJoin('SieAppWebBundle:NivelTipo','nt','with','iec.nivelTipo = nt.id')
                            ->innerJoin('SieAppWebBundle:GradoTipo','grat','with','iec.gradoTipo = grat.id')
                            ->innerJoin('SieAppWebBundle:GestionTipo','gt','with','iec.gestionTipo = gt.id')
                            ->where('e.id = :idEstudiante')
                            ->andWhere('ei.estadomatriculaTipo = :matricula')
                            ->andWhere('iec.gestionTipo = :gestion')
                            ->andWhere('inst.institucioneducativaTipo IN (:tipeInst)')
                            ->andWhere('iec.nivelTipo = :level')
                            ->andWhere('iec.gradoTipo IN (:grado)')
                            ->setParameter('idEstudiante', $estudiante->getId())
                            ->setParameter('matricula',4)
                            ->setParameter('gestion',$this->session->get('currentyear'))
                            ->setParameter('tipeInst', array(1))
                            ->setParameter('level', 13)
                            ->setParameter('grado', array(1,2,3,4));
		$inscripcionesEfectivas = $inscripcionesEfectivas->getQuery();
		//dump($inscripcionesEfectivas->getSQL());die;
		$inscripcionesEfectivas = $inscripcionesEfectivas->getResult();
		//dump($inscripcionesEfectivas);die;
        $arrInfoInscription = array();
        if (count($inscripcionesEfectivas)==0) {
            return $response->setData([
                'status'=>'error',
                'msg'=>'El estudiante fuera de rango'
            ]);
        }else{
        	$arrInfoInscription = array();
        }
      

        $swDoneCash = true;

        $arrStudent = array(
            'nombre'=>$estudiante->getNombre(),
            'paterno'=>$estudiante->getPaterno(),
            'materno'=>$estudiante->getMaterno(),
            'carnet'=>$estudiante->getCarnetIdentidad(),
            'idGenero'=>$estudiante->getGeneroTipo()->getId(),
            'genero'=>$em->getRepository('SieAppWebBundle:GeneroTipo')->find($estudiante->getGeneroTipo()->getId())->getGenero() ,
            'estId'=>$estudiante->getId(),
            'estInsId'=>$inscripcionesEfectivas[0]['studentInscriptionId'],
            'institucioneducativaId'=>$inscripcionesEfectivas[0]['institucioneducativaId'],
            'institucioneducativa'=>$inscripcionesEfectivas[0]['institucioneducativa'],
            'codigoRude' => $estudiante->getCodigoRude(),
            'nivelId'=>$inscripcionesEfectivas[0]['idNivel'],
            'nivel'=>$em->getRepository('SieAppWebBundle:NivelTipo')->find($inscripcionesEfectivas[0]['idNivel'])->getNivel(),
            'gradoId'=>$inscripcionesEfectivas[0]['idGrado'],
            'grado'=>$em->getRepository('SieAppWebBundle:GradoTipo')->find($inscripcionesEfectivas[0]['idGrado'])->getGrado() ,
            'paraleloId'=>$inscripcionesEfectivas[0]['idParalelo'],
            'paralelo'=>$em->getRepository('SieAppWebBundle:ParaleloTipo')->find($inscripcionesEfectivas[0]['idParalelo'])->getParalelo()  ,
            'cicloId'=>$inscripcionesEfectivas[0]['idCiclo'],
        );          
		//dump($arrStudent);die;
        return $response->setData([
            'status'=>'success',
            'datos'=>array(
                'swStudent'=>$swStudent,
                'arrStudent'=>$arrStudent,
            )
        ]);
    }

    public function registryStudentAction(Request $request){
    	$response = new JsonResponse();
        $estudiante = $request->get('estudiante', null);
        //dump($estudiante);die;
        $opcion = $request->get('opcion', null);
        $em = $this->getDoctrine()->getManager();

        $objStudentQuipus = new EstudianteQuipus();
        $objStudentQuipus->setFechaRegistro(new \DateTime('now'));
        $objStudentQuipus->setCodigoRude($estudiante['codigoRude']);
        $objStudentQuipus->setPaterno(mb_strtoupper($estudiante['paterno'], 'utf-8'));
        $objStudentQuipus->setMaterno(mb_strtoupper($estudiante['materno'], 'utf-8'));
        $objStudentQuipus->setNombre(mb_strtoupper($estudiante['nombre'], 'utf-8'));                        
        $objStudentQuipus->setCarnetIdentidad($estudiante['carnet']);
        $objStudentQuipus->setComplemento($estudiante['complemento']);
        $objStudentQuipus->setOrgcurricularTipoId(1);
        //$objStudentQuipus->setFechaNacimiento(new \DateTime($estudiante['fechaNac']));
        $objStudentQuipus->setFechaNacimiento(new \DateTime('now'));
        $objStudentQuipus->setInstitucioneducativa($em->getRepository('SieAppWebBundle:Institucioneducativa')->find($estudiante['institucioneducativaId']) );
        $objStudentQuipus->setGestionTipo($em->getRepository('SieAppWebBundle:GestionTipo')->find($this->session->get('currentyear')) );
        $objStudentQuipus->setEstudianteInscripcion($em->getRepository('SieAppWebBundle:EstudianteInscripcion')->find($estudiante['estInsId']) );
        $objStudentQuipus->setEstudiante($em->getRepository('SieAppWebBundle:Estudiante')->find($estudiante['estId']) );

        $objStudentQuipus->setGeneroTipoId($estudiante['idGenero']);
        $objStudentQuipus->setNivelTipoId($estudiante['nivelId']);
        $objStudentQuipus->setGradoTipoId($estudiante['gradoId']);
        $objStudentQuipus->setParaleloTipoId($estudiante['paraleloId']);
        $objStudentQuipus->setTurnoTipoId($estudiante['cicloId']);
        
        $objStudentQuipus->setEstado('f');
        
        $em->persist($objStudentQuipus);
		$em->flush();

		$studentsQuipus = $this->getStudentsQuipus($this->session->get('ie_id'));	


        return $response->setData([
            'status'=>'success',
            'datos'=>array(
                'swregistry'=>true,                
                'arrStudents'=>$studentsQuipus,
                'swConfirm'=>(sizeof($studentsQuipus)==2)?true:false,
            )
        ]);		


    }
    public function removeStudentAction(Request $request){

    	$response = new JsonResponse();
        $id = $request->get('id', null);
        
        $em = $this->getDoctrine()->getManager();    	

            $objStudentQuipus = $em->getRepository('SieAppWebBundle:EstudianteQuipus')->find($id);
            if($objStudentQuipus){
              $em->remove($objStudentQuipus);
              $em->flush();
            }              

		$studentsQuipus = $this->getStudentsQuipus($this->session->get('ie_id'));	

        return $response->setData([
            'status'=>'success',
            'datos'=>array(
                'swregistry'=>true,                
                'arrStudents'=>$studentsQuipus,
                'swConfirm'=>(sizeof($studentsQuipus)==2)?true:false,
            )
        ]);	             	


    }

    public function closeRegistryAction(Request $request){

    	$response = new JsonResponse();
        $estudiantes = $request->get('estudiantes', null);
        
        $em = $this->getDoctrine()->getManager();    	

        foreach ($estudiantes as $value) {
        	
        	$objStudentQuipus = $em->getRepository('SieAppWebBundle:EstudianteQuipus')->find($value['id']);
            if($objStudentQuipus){
              $objStudentQuipus->setEstado('t');            
            }
        }
  		$em->flush();
            

		$studentsQuipus = $this->getStudentsQuipus($this->session->get('ie_id'));	

        return $response->setData([
            'status'=>'success',
            'datos'=>array(
                'swregistry'=>true,                
                'arrStudents'=>$studentsQuipus,
                'swConfirm'=>false,
                'swConfirmGlobal'=>true,
                'urlreport'=> $this->generateUrl('donwload_ddjjStudentsQuipus', array('sie'=>$this->session->get('ie_id'))),
            )
        ]);	             	


    }    
    

}
