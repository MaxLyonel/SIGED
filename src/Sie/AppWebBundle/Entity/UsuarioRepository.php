<?php

namespace Sie\AppWebBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * UsuarioRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class UsuarioRepository extends EntityRepository
{
    public function getLugarNivelUsuarios($nivel_lugar) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                ->select('b.id as personaid, b.carnet, b.complemento, b.nombre, b.paterno, b.materno, b.fechaNacimiento, a.id as usuarioid, a.username, a.fechaRegistro, a.esactivo as usuarioesactivo, d.id as usuario_rolid, e.id as rol_tipid, e.rol, d.esactivo as rolesactivo, f.id as lugar_tipoid, f.lugar, g.id as lugar_nivel_tipoid, g.nivel as lugarnivel ')
                ->from('SieAppWebBundle:Usuario', 'a')
                ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')
                ->innerJoin('SieAppWebBundle:UsuarioRol', 'd', 'WITH', 'd.usuario = a.id')
                ->innerJoin('SieAppWebBundle:RolTipo', 'e', 'WITH', 'e.id = d.rolTipo')                
                ->innerJoin('SieAppWebBundle:LugarTipo', 'f', 'WITH', 'f.id = d.lugarTipo')
                ->innerJoin('SieAppWebBundle:LugarNivelTipo', 'g', 'WITH', 'g.id = f.lugarNivel')
                ->where('g.id = '.$nivel_lugar)
                ->orderBy('b.nombre, b.paterno, b.materno, a.username, a.fechaRegistro, e.rol, f.lugar, g.nivel');
        
        return $qb->getQuery()->getResult();
    }
    
    public function getDisByDep($dep) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                ->select('b.id as personaid, b.carnet, b.complemento, b.nombre, b.paterno, b.materno, b.fechaNacimiento, a.id as usuarioid, a.username, a.fechaRegistro, a.esactivo as usuarioesactivo, d.id as usuario_rolid, e.id as rol_tipid, e.rol, d.esactivo as rolesactivo, f.id as lugar_tipoid, f.lugar, g.id as lugar_nivel_tipoid, g.nivel as lugarnivel ')
                ->from('SieAppWebBundle:Usuario', 'a')
                ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')
                ->innerJoin('SieAppWebBundle:UsuarioRol', 'd', 'WITH', 'd.usuario = a.id')
                ->innerJoin('SieAppWebBundle:RolTipo', 'e', 'WITH', 'e.id = d.rolTipo')                
                ->innerJoin('SieAppWebBundle:LugarTipo', 'f', 'WITH', 'f.id = d.lugarTipo')
                ->innerJoin('SieAppWebBundle:LugarNivelTipo', 'g', 'WITH', 'g.id = f.lugarNivel')
                ->where('f.lugarTipo = '.$dep)
                ->andwhere('e.id = 10')
                ->orderBy('b.nombre, b.paterno, b.materno, a.username, a.fechaRegistro, e.rol, f.lugar, g.nivel');
        
        return $qb->getQuery()->getResult();
    }
    
    public function getFindByUserPersolRol($userid) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                        ->select('e.id as rolid, a.id as usuarioid, b.id as personaid, d.id as usuariorolid, e.rol, d.esactivo as rolesactivo, a.fechaRegistro, h.lugar as lugarnivelsup, f.id as lugar_tipoid, f.lugar, f.codigo as discod, g.id as lugarNivelId, g.nivel, e.diminutivo, d.subSistema ')
        //                ->select(' a.id as usuarioid, b.id as personaid, a.fechaRegistro')
                        ->from('SieAppWebBundle:Usuario', 'a')
                        ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')
                        ->innerJoin('SieAppWebBundle:UsuarioRol', 'd', 'WITH', 'd.usuario = a.id')
                        ->innerJoin('SieAppWebBundle:RolTipo', 'e', 'WITH', 'e.id = d.rolTipo')
                        ->innerJoin('SieAppWebBundle:LugarTipo', 'f', 'WITH', 'f.id = d.lugarTipo')
                        ->innerJoin('SieAppWebBundle:LugarNivelTipo', 'g', 'WITH', 'g.id = f.lugarNivel')
                        ->innerJoin('SieAppWebBundle:LugarTipo', 'h', 'WITH', 'h.id = f.lugarTipo')                
                        ->where("a.id = '".$userid."'")
                        //->andwhere("d.esactivo = true")
                        ->orderBy('g.id');
        
        return $qb->getQuery()->getResult();
    }

    public function getFindByUserPersolAndRol($userid,$rolid) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                        ->select('e.id as rolid, a.id as usuarioid, b.id as personaid, d.id as usuariorolid, e.rol, d.esactivo as rolesactivo, a.fechaRegistro, h.lugar as lugarnivelsup, f.id as lugar_tipoid, f.lugar, f.codigo as discod, g.id as lugarNivelId, g.nivel, e.diminutivo, d.subSistema ')
        //                ->select(' a.id as usuarioid, b.id as personaid, a.fechaRegistro')
                        ->from('SieAppWebBundle:Usuario', 'a')
                        ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')
                        ->innerJoin('SieAppWebBundle:UsuarioRol', 'd', 'WITH', 'd.usuario = a.id')
                        ->innerJoin('SieAppWebBundle:RolTipo', 'e', 'WITH', 'e.id = d.rolTipo')
                        ->innerJoin('SieAppWebBundle:LugarTipo', 'f', 'WITH', 'f.id = d.lugarTipo')
                        ->innerJoin('SieAppWebBundle:LugarNivelTipo', 'g', 'WITH', 'g.id = f.lugarNivel')
                        ->innerJoin('SieAppWebBundle:LugarTipo', 'h', 'WITH', 'h.id = f.lugarTipo')                
                        ->where("a.id = '".$userid."'")
                        ->andwhere("d.esactivo = true")
                        ->andwhere("e.id = '".$rolid."'")
                        ->orderBy('g.id');
        
        return $qb->getQuery()->getResult();
    }
    
    public function getFindByUserPerson($userid) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                ->select('a')
                ->from('SieAppWebBundle:Usuario', 'a')
                ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')
                ->innerJoin('SieAppWebBundle:UsuarioRol', 'd', 'WITH', 'd.usuario = a.id')                
                ->where("a.id = '".$userid."'");
        
        return $qb->getQuery()->getResult();
    }
}
