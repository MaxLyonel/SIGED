<?php

namespace Sie\AppWebBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * MaestroInscripcionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MaestroInscripcionRepository extends EntityRepository
{    
    public function getDirectorAlternativa($ie_id, $ie_gestion, $ie_suc_id, $ie_per_cod) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                ->select('b')
                ->from('SieAppWebBundle:MaestroInscripcion', 'a')
                ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')                
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'c', 'WITH', 'c.id = a.institucioneducativaSucursal')
                ->where('a.institucioneducativa = '.$ie_id)
                ->andWhere('a.gestionTipo = '.$ie_gestion)
                ->andWhere('a.institucioneducativaSucursal = '.$ie_suc_id)
                ->andWhere('a.periodoTipo = '.$ie_per_cod)
                ->andWhere('a.cargoTipo = 1');
        
        return $qb->getQuery()->getResult();
    }
    
    public function getUserSieDirGest($persona, $gestion, $periodo) {  
//        $query = "
//                select max(d.gestion_tipo_id)
//                from maestro_inscripcion a
//                inner join institucioneducativa b on a.institucioneducativa_id = b.id
//                inner join institucioneducativa_sucursal d on d.institucioneducativa_id = b.id
//                inner join orgcurricular_tipo c on b.orgcurricular_tipo_id = c.id
//                where
//                a.persona_id = ".$persona." and
//                c.id = 2 and
//                a.gestion_tipo_id = ".$gestion." and
//                d.periodo_tipo_id = ".$periodo." and
//                (a.cargo_tipo_id = 1 or a.cargo_tipo_id = 12 or a.cargo_tipo_id = 0 ) and
//                a.es_vigente_administrativo is true
//                ";
//        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
//        $params = array();
//        $stmt->execute($params);        
//        $gestionsuc = $stmt->fetchAll();
//
//        if($gestionsuc[0]["max"] == NULL) {
//            $gestionsuc[0]["max"] = $gestion;
//        }
        
        //******************
        //****PARA EL CASO DE ALTERNATIVA BUSCA SI SE EL DIRECTOR ES VIGENTE EN LA GESTION SOLICIDATA $gestion        
        //*****************
        $query = "
                select a.persona_id, b.id, b.institucioneducativa, c.orgcurricula
                from maestro_inscripcion a
                inner join institucioneducativa b on a.institucioneducativa_id = b.id
                inner join institucioneducativa_sucursal d on d.institucioneducativa_id = b.id
                inner join orgcurricular_tipo c on b.orgcurricular_tipo_id = c.id
                where
                a.persona_id = ".$persona." and
                c.id = 2 and
                d.gestion_tipo_id = ".$gestion." and
                a.gestion_tipo_id = ".$gestion." and
                d.periodo_tipo_id = ".$periodo." and
                (a.cargo_tipo_id = 1 or a.cargo_tipo_id = 12 or a.cargo_tipo_id = 0 ) and
                a.es_vigente_administrativo is true
                ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $params = array();
        $stmt->execute($params);        
        $po = $stmt->fetchAll();
        
        //*****EN CASO DE QUE EXISTA VIGENTES EN LA GESTION
        if (count($po) > 0){ 
            $gestionAlt = $gestion;
            $periodoAlt = $periodo;        
        //*****EN CASO DE QUE NO EXISTA VIGENTES EN LA GESTION ENVIA LA BUSQUEDA UN PERIODO ATRAS PARA ALTERNATIVA
        }else{
            if ($periodo == '2'){
                $gestionAlt = strval( intval($gestion)-1);
                $periodoAlt = '3';
            }
            if ($periodo == '3'){
                $gestionAlt = $gestion;
                $periodoAlt = '2';
            }
        }
        
        $query = "
                select * from (
                select a.persona_id, b.id, b.institucioneducativa, c.orgcurricula
                from maestro_inscripcion a
                inner join institucioneducativa b on a.institucioneducativa_id = b.id
                inner join orgcurricular_tipo c on b.orgcurricular_tipo_id = c.id
                where 
                a.persona_id = ".$persona." and
                c.id = 1 and
                a.gestion_tipo_id = ".$gestion." and
                (a.cargo_tipo_id = 1 or a.cargo_tipo_id = 12 or a.cargo_tipo_id = 0 ) and
                a.es_vigente_administrativo is true

                union

                select a.persona_id, b.id, b.institucioneducativa, c.orgcurricula
                from maestro_inscripcion a
                inner join institucioneducativa b on a.institucioneducativa_id = b.id
                inner join orgcurricular_tipo c on b.orgcurricular_tipo_id = c.id
                where 
                a.persona_id = ".$persona." and
                c.id = 2 and
                a.gestion_tipo_id = ".$gestion." and
                (a.cargo_tipo_id = 1 or a.cargo_tipo_id = 12 or a.cargo_tipo_id = 0 ) and
                a.es_vigente_administrativo is true

                union

                select a.persona_id, b.id, b.institucioneducativa, c.orgcurricula
                from maestro_inscripcion a
                inner join institucioneducativa b on a.institucioneducativa_id = b.id
                inner join institucioneducativa_sucursal d on d.institucioneducativa_id = b.id
                inner join orgcurricular_tipo c on b.orgcurricular_tipo_id = c.id
                where
                a.persona_id = ".$persona." and
                c.id = 2 and
                d.gestion_tipo_id = ".$gestionAlt." and
                a.gestion_tipo_id = ".$gestionAlt." and
                d.periodo_tipo_id = ".$periodoAlt." and
                (a.cargo_tipo_id = 1 or a.cargo_tipo_id = 12 or a.cargo_tipo_id = 0 ) and
                a.es_vigente_administrativo is true) d
                order by d.id
                ";
        $stmt = $this->getEntityManager()->getConnection()->prepare($query);
        $params = array();
        $stmt->execute($params);        
        $po = $stmt->fetchAll();

        return $po;
    }
    
    public function getUserSieDir($persona) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb                
                ->select('i.id, i.institucioneducativa, oct.orgcurricula')
                ->from('SieAppWebBundle:MaestroInscripcion', 'mi')
                ->leftJoin('SieAppWebBundle:Institucioneducativa', 'i', 'WITH', 'mi.institucioneducativa = i.id')
                ->innerJoin('SieAppWebBundle:OrgcurricularTipo', 'oct', 'WITH', 'i.orgcurricularTipo = oct.id')
                ->where('mi.persona = :persona')
                ->andwhere('mi.esVigenteAdministrativo = true')
                ->andwhere('mi.cargoTipo = 1 OR mi.cargoTipo = 12 OR mi.cargoTipo = 0')
                ->groupBy('i.id, i.institucioneducativa, oct.orgcurricula')
                ->orderBy('i.id')
                ->setParameter('persona', $persona);                
        return $qb->getQuery()->getResult();
    }
    
    public function getListaAdministrativos($ie_id, $ie_gestion, $ie_suc_id, $ie_per_cod) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                ->select('b.id as pId, a.id as miId, d.id ctId, b.carnet, b.paterno, b.materno, b.nombre, d.cargo')
                ->from('SieAppWebBundle:MaestroInscripcion', 'a')
                ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')                
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'c', 'WITH', 'c.id = a.institucioneducativaSucursal')
                ->innerJoin('SieAppWebBundle:CargoTipo', 'd', 'WITH', 'd.id = a.cargoTipo')
                ->where('a.institucioneducativa = '.$ie_id)
                ->andWhere('a.gestionTipo = '.$ie_gestion)
                ->andWhere('a.institucioneducativaSucursal = '.$ie_suc_id)
                ->andWhere('a.periodoTipo = '.$ie_per_cod)
                ->orderBy('b.paterno, b.materno, b.nombre');
        
        return $qb->getQuery()->getResult();
    }
    
    public function getListaDocentes($ie_id, $ie_gestion, $ie_suc_id, $ie_per_cod) {
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb
                ->select('b.id as pId, a.id as miId, d.id ctId, b.carnet, b.paterno, b.materno, b.nombre, d.cargo')
                ->from('SieAppWebBundle:MaestroInscripcion', 'a')
                ->innerJoin('SieAppWebBundle:Persona', 'b', 'WITH', 'b.id = a.persona')                
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'c', 'WITH', 'c.id = a.institucioneducativaSucursal')
                ->innerJoin('SieAppWebBundle:CargoTipo', 'd', 'WITH', 'd.id = a.cargoTipo')
                ->where('a.institucioneducativa = '.$ie_id)
                ->andWhere('a.gestionTipo = '.$ie_gestion)
                ->andWhere('a.institucioneducativaSucursal = '.$ie_suc_id)
                ->andWhere('a.periodoTipo = '.$ie_per_cod)
                ->orderBy('b.paterno, b.materno, b.nombre');
        
        return $qb->getQuery()->getResult();
    }
    
}
