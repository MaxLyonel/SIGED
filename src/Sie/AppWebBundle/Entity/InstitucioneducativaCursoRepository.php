<?php

namespace Sie\AppWebBundle\Entity;

use Doctrine\ORM\EntityRepository;

/**
 * InstitucioneducativaCursoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstitucioneducativaCursoRepository extends EntityRepository
{
    public function getAlterCursosBySieGestSubPer($ie_id, $ie_gestion, $ie_subcea, $per_id_cod) {
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('h.id as iecId, a.codigo as nivelId, a.facultadArea as nivel, b.codigo as cicloId, b.especialidad as ciclo,
                 d.codigo as gradoId, d.acreditacion as grado, q.id as turnoId, q.turno, p.id as paraleloId, p.paralelo,
                 b.codigo as setCodigo, d.codigo as satCodigo, a.codigo as sfatCodigo, b.id as setId, f.periodoTipoId as periodoId
                 ')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo = d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad = c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion = e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo = g.id')
                ->innerJoin('SieAppWebBundle:ParaleloTipo', 'p', 'WITH', 'h.paraleloTipo = p.id')
                ->innerJoin('SieAppWebBundle:TurnoTipo', 'q', 'WITH', 'h.turnoTipo  = q.id')
                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->groupBy('h.id, a.codigo, a.facultadArea, b.codigo, b.especialidad, d.codigo, d.acreditacion, q.id, p.id, a.codigo, b.id,f.periodoTipoId')
                ->orderBy('a.codigo, b.codigo, d.codigo, p.id')
                ->setParameter('sie', $ie_id)
                ->setParameter('gestion', $ie_gestion)
                ->setParameter('sucursal', $ie_subcea)
                ->setParameter('periodo', $per_id_cod)
        ;
        return $qb->getQuery()->getResult();
    }

    public function getListStudentPerCourseAlter($ie_curso_id) {
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb

                ->select('emt.estadomatricula, emt.id as estadomatriculaId, j.id, j.carnetIdentidad, j.codigoRude, j.paterno, j.materno, j.nombre, j.fechaNacimiento, i.id as eInsId, a.codigo as nivelId, b.codigo as cicloId, d.codigo as gradoId')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo=d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad=c.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion=e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo=g.id')
                ->innerJoin('SieAppWebBundle:EstudianteInscripcion', 'i', 'WITH', 'h.id=i.institucioneducativaCurso')
                ->innerJoin('SieAppWebBundle:Estudiante', 'j', 'WITH', 'i.estudiante=j.id')
                ->innerJoin('SieAppWebBundle:EstadomatriculaTipo', 'emt', 'WITH', 'i.estadomatriculaTipo = emt.id')
                ->where('h.id = :ie_curso_id')
                ->orderBy('j.paterno, j.materno, j.nombre')
                ->setParameter('ie_curso_id', $ie_curso_id)
        ;
        return $qb->getQuery()->getResult();
    }

    public function getListStudentPerCourseTodoInscriptionAlter($ie_id, $ie_gestion, $ie_subcea, $per_id_cod, $realLevel, $setCodigo, $satCodigo, $paralelo, $turno) {
        $qb = $this->getEntityMAnager()->createQueryBuilder();//echo "$ie_id, $ie_gestion, $ie_subcea, $per_id_cod, $realLevel";
        $qb

                ->select('emt.estadomatricula, emt.id as estadomatriculaId, j.id, j.carnetIdentidad, j.codigoRude, j.paterno, j.materno, j.nombre, j.fechaNacimiento, i.id as eInsId, a.codigo as nivelId, b.codigo as cicloId, d.codigo as gradoId')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo=d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad=c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion=e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo=g.id')
                ->innerJoin('SieAppWebBundle:EstudianteInscripcion', 'i', 'WITH', 'h.id=i.institucioneducativaCurso')
                ->innerJoin('SieAppWebBundle:Estudiante', 'j', 'WITH', 'i.estudiante=j.id')
                ->innerJoin('SieAppWebBundle:EstadomatriculaTipo', 'emt', 'WITH', 'i.estadomatriculaTipo = emt.id')

                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->andwhere('a.codigo = :realLevel')
                ->andwhere('b.codigo = :setCodigo')
                ->andwhere('d.codigo = :satCodigo')
                ->andwhere('h.paraleloTipo = :paralelo')
                ->andwhere('h.turnoTipo = :turno')
                ->andwhere('i.estadomatriculaTipo = :matriculaTipo')

                ->setParameter('sie', $ie_id)
                ->setParameter('gestion', $ie_gestion)
                ->setParameter('sucursal', $ie_subcea)
                ->setParameter('periodo', $per_id_cod)
                ->setParameter('realLevel', $realLevel)
                ->setParameter('setCodigo', $setCodigo)
                ->setParameter('satCodigo', $satCodigo)
                ->setParameter('paralelo', $paralelo)
                ->setParameter('turno', $turno)
                ->setParameter('matriculaTipo', 5)

                ->orderBy('j.paterno, j.materno, j.nombre')
        ;//dump($qb->getQuery()->getSQL());die;
        return $qb->getQuery()->getResult();
    }

    public function getStudentsTodoInscription($ie_id, $ie_gestion, $ie_subcea, $per_id_cod, $realLevel) {
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('h.id as iecId, a.codigo as nivelId, a.facultadArea as nivel, b.codigo as cicloId, b.especialidad as ciclo,
                 d.codigo as gradoId, d.acreditacion as grado, q.id as turnoId, q.turno, p.id as paraleloId, p.paralelo, est.codigoRude')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo = d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad = c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion = e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo = g.id')

                ->innerJoin('SieAppWebBundle:EstudianteInscripcion', 'ei', 'WITH', 'h.id = ei.institucioneducativaCurso')
                ->innerJoin('SieAppWebBundle:Estudiante', 'est', 'WITH', 'ei.estudiante = est.id')

                ->innerJoin('SieAppWebBundle:ParaleloTipo', 'p', 'WITH', 'h.paraleloTipo = p.id')
                ->innerJoin('SieAppWebBundle:TurnoTipo', 'q', 'WITH', 'h.turnoTipo  = q.id')

                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->andwhere('a.codigo = :realLevel')

                ->setParameter('sie', $ie_id)
                ->setParameter('gestion', $ie_gestion)
                ->setParameter('sucursal', $ie_subcea)
                ->setParameter('periodo', $per_id_cod - 1)
                ->setParameter('realLevel', $realLevel)

                ->orderBy('a.codigo, b.codigo, d.codigo, p.id')
        ;
        return $qb->getQuery()->getResult();
    }

    /**
    *method to find the modules per course to the alternativa
    *return array wiht the modules
    **/
    public function findModulesByCourse($data){
      $qb = $this->getEntityMAnager()->createQueryBuilder();
      $qb
              ->select('iec.id as iecId, ieco.id as iecoId, smp.id as smpId, smt.id as smtId, smt.modulo as modulo, smt.esvigente')
              ->from('SieAppWebBundle:InstitucioneducativaCurso', 'iec')
              ->innerJoin('SieAppWebBundle:InstitucioneducativaCursoOferta', 'ieco', 'WITH', 'iec.id = ieco.insitucioneducativaCurso')
              ->innerJoin('SieAppWebBundle:SuperiorModuloPeriodo', 'smp', 'WITH', 'ieco.superiorModuloPeriodo = smp.id')
              ->leftjoin('SieAppWebBundle:SuperiorModuloTipo', 'smt', 'WITH', 'smp.superiorModuloTipo = smt.id')
              ->where('iec.id = :ie_curso_id')
              ->setParameter('ie_curso_id', $data['ueducativaInfoId']['iecId'])
              ->orderBy('smt.id', 'ASC')
      ;
      return $qb->getQuery()->getResult();
    }

/*
SELECT s2_.codigo AS codigo3, s2_.especialidad AS especialidad4
FROM superior_facultad_area_tipo s1_ 
INNER JOIN superior_especialidad_tipo s2_ ON (s1_.id = s2_.superior_facultad_area_tipo_id) 
INNER JOIN superior_acreditacion_especialidad s7_ ON (s2_.id = s7_.superior_especialidad_tipo_id) 
INNER JOIN superior_institucioneducativa_acreditacion s8_ ON (s8_.acreditacion_especialidad_id = s7_.id) 
INNER JOIN institucioneducativa_sucursal i6_ ON (s8_.institucioneducativa_sucursal_id = i6_.id) 
INNER JOIN superior_institucioneducativa_periodo s9_ ON (s9_.superior_institucioneducativa_acreditacion_id = s8_.id) 
INNER JOIN institucioneducativa_curso i0_ ON (i0_.superior_institucioneducativa_periodo_id = s9_.id) 
WHERE i0_.institucioneducativa_id = 20680003 AND i0_.gestion_tipo_id = 2019 AND i6_.sucursal_tipo_id = 0 AND i6_.periodo_tipo_id = 2 
and s1_.codigo = 15 --and s2_.codigo in (1,2)
GROUP BY s2_.codigo, s2_.especialidad
ORDER BY 1

*/
     public function getLevelPerSieGestionSubceaPeriodo($data) {
        
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('b.codigo, b.especialidad')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad = c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion = e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo = g.id')
                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->andwhere('a.codigo = :sfatCodigo')
                ->groupBy('b.codigo, b.especialidad ')
                ->orderBy('b.codigo')
                ->setParameter('sie', $data['sie'])
                ->setParameter('gestion', $data['gestion'])
                ->setParameter('sucursal', $data['sucursal'])
                ->setParameter('periodo', $data['periodo'])
                ->setParameter('sfatCodigo', 15)
        ;   
        return $qb->getQuery()->getResult();
    }

     public function getEtapaPerSieGestionSubceaPeriodo($data) {
        
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('d.codigo,d.acreditacion ')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo = d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad = c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion = e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo = g.id')
                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->andwhere('a.codigo = :sfatCodigo')
                ->andwhere('b.codigo = :levelId')
                ->groupBy('d.codigo,d.acreditacion ')
                ->orderBy('d.codigo')
                ->setParameter('sie', $data['sie'])
                ->setParameter('gestion', $data['gestion'])
                ->setParameter('sucursal', $data['sucursal'])
                ->setParameter('periodo', $data['periodo'])
                ->setParameter('sfatCodigo', 15)
                ->setParameter('levelId', $data['levelId'])
        ;   
        return $qb->getQuery()->getResult();
    }


     public function getParaleloPerSieGestionSubceaPeriodo($data) {
        
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('p.id,p.paralelo ')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo = d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad = c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion = e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo = g.id')
                ->innerJoin('SieAppWebBundle:ParaleloTipo', 'p', 'WITH', 'h.paraleloTipo = p.id')
                ->innerJoin('SieAppWebBundle:TurnoTipo', 'q', 'WITH', 'h.turnoTipo  = q.id')
                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->andwhere('a.codigo = :sfatCodigo')
                ->andwhere('b.codigo = :levelId')
                ->andwhere('d.codigo = :etapaId')
                ->groupBy('p.id,p.paralelo')
                ->orderBy('p.id')
                ->setParameter('sie', $data['sie'])
                ->setParameter('gestion', $data['gestion'])
                ->setParameter('sucursal', $data['sucursal'])
                ->setParameter('periodo', $data['periodo'])
                ->setParameter('sfatCodigo', 15)
                ->setParameter('levelId', $data['levelId'])
                ->setParameter('etapaId', $data['etapaId'])
        ;   
        // dump($qb->getQuery()->getSQL());
        return $qb->getQuery()->getResult();
    }

     public function getInstEduCursoPerSieGestionSubceaPeriodoParalelo($data) {
        
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('h.id')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo = d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad = c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion = e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo = g.id')
                ->innerJoin('SieAppWebBundle:ParaleloTipo', 'p', 'WITH', 'h.paraleloTipo = p.id')
                ->innerJoin('SieAppWebBundle:TurnoTipo', 'q', 'WITH', 'h.turnoTipo  = q.id')
                ->where('h.institucioneducativa = :sie')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('f.sucursalTipo = :sucursal')
                ->andwhere('f.periodoTipoId = :periodo')
                ->andwhere('a.codigo = :sfatCodigo')
                ->andwhere('b.codigo = :levelId')
                ->andwhere('d.codigo = :etapaId')
                ->andwhere('h.paraleloTipo = :paraleloId')
                // ->groupBy('p.id,p.paralelo')
                ->orderBy('h.id')
                ->setParameter('sie', $data['sie'])
                ->setParameter('gestion', $data['gestion'])
                ->setParameter('sucursal', $data['sucursal'])
                ->setParameter('periodo', $data['periodo'])
                ->setParameter('sfatCodigo', 15)
                ->setParameter('levelId', $data['levelId'])
                ->setParameter('etapaId', $data['etapaId'])
                ->setParameter('paraleloId', $data['paraleloId'])
        ;   
        // dump($qb->getQuery()->getSQL());
        return $qb->getQuery()->getResult();
    }

    public function getCurrentStudentInscriptionOnAlt($data){
        $qb = $this->getEntityMAnager()->createQueryBuilder();
        $qb
                ->select('i')
                ->from('SieAppWebBundle:SuperiorFacultadAreaTipo', 'a')
                ->innerJoin('SieAppWebBundle:SuperiorEspecialidadTipo', 'b', 'WITH', 'a.id = b.superiorFacultadAreaTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionEspecialidad', 'c', 'WITH', 'b.id = c.superiorEspecialidadTipo')
                ->innerJoin('SieAppWebBundle:SuperiorAcreditacionTipo', 'd', 'WITH', 'c.superiorAcreditacionTipo=d.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaAcreditacion', 'e', 'WITH', 'e.acreditacionEspecialidad=c.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaSucursal', 'f', 'WITH', 'e.institucioneducativaSucursal = f.id')
                ->innerJoin('SieAppWebBundle:SuperiorInstitucioneducativaPeriodo', 'g', 'WITH', 'g.superiorInstitucioneducativaAcreditacion=e.id')
                ->innerJoin('SieAppWebBundle:InstitucioneducativaCurso', 'h', 'WITH', 'h.superiorInstitucioneducativaPeriodo=g.id')
                ->innerJoin('SieAppWebBundle:EstudianteInscripcion', 'i', 'WITH', 'h.id=i.institucioneducativaCurso')
                ->where('i.estudiante = :studentId')
                ->andwhere('i.estadomatriculaTipo = :matriculaTipo')
                ->andwhere('h.gestionTipo = :gestion')
                ->andwhere('a.codigo = :sfatCodigo')
                ->setParameter('studentId', $data['estudianteId'])
                ->setParameter('matriculaTipo', 4)
                ->setParameter('gestion', $data['gestion'])
                ->setParameter('sfatCodigo', 15)
                
        ;   
        // dump($qb->getQuery()->getSQL());
        return $qb->getQuery()->getResult();

    }


    



}
